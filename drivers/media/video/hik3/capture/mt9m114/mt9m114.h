
/*
 *  mt9m114 camera driver head file
 *
 *  CopyRight (C) Hisilicon Co., Ltd.
 *	Author :
 *  Version:  1.2
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 */

#ifndef _MT9M114_H
#define _MT9M114_H

#include "../isp/k3_isp_io.h"

#define MT9M114REG_SOFTWARE_RESET	0x0103

/* High 4 bits are clock, low 4 bits are reset */
#define MT9M114REG_CLKRST0		       0x3016
#define MT9M114REG_CLKRST1		       0x3017
#define MT9M114REG_CLKRST2		       0x3018

#define MT9M114REG_PLL1_MULTIPLIER	0x30b3
#define MT9M114REG_PLL1_PREDIV		0x30b4
#define MT9M114REG_PLL1_OP_PIX_DIV	0x30b5
#define MT9M114REG_PLL1_OS_SYS_DIV	0x30b6

#define MT9M114REG_PLL2_PREDIV		0x3090
#define MT9M114REG_PLL2_MULTIPLIER	0x3091
#define MT9M114REG_PLL2_DIVS			0x3092
#define MT9M114REG_PLL2_SELD5		       0x3093

#define MT9M114REG_PLL3_PREDIV		0x3098
#define MT9M114REG_PLL3_MULT1		       0x309c
#define MT9M114REG_PLL3_MULT2		       0x3099
#define MT9M114REG_PLL3_DIVS		       0x309a
#define MT9M114REG_PLL3_DIV		       0x309b

#define MT9M114REG_WIDTH			       0x3808
#define MT9M114REG_HEIGHT		              0x380a

#define MT9M114REG_HTS			              0x380c
#define MT9M114REG_VTS			              0x380e

#define MT9M114REG_X_ADDR_START		0x3800
#define MT9M114REG_Y_ADDR_START		0x3802
#define MT9M114REG_X_ADDR_END		0x3804
#define MT9M114REG_Y_ADDR_END		0x3806

#define MT9M114REG_H_OFFSET		       0x3810
#define MT9M114REG_V_OFFSET		       0x3812

/*
 * bit[1:0]
 * 0 no mirror and no flip
 * 1 mirror
 * 2 flip
 * 3 mirror and flip
 */
#define MT9M114REG_FLIP			       0xC834

/*
 * bit[7:4]: odd inc
 * bit[3:0]: even inc
 */
#define MT9M114REG_X_INC			       0x3814
#define MT9M114REG_Y_INC			       0x3815

/*
 * bit[6]: digital vertical flip
 * bit[1]: array vertical flip
 * bit[0]: vertical binning
 */
#define MT9M114REG_TIMING_FORMAT1	0x3820

/*
 * bit[2:1]: 00-normal;11-horizontal mirror
 * bit[0]: horizontal binning
 */
#define MT9M114REG_TIMING_FORMAT2	0x3821

/* exposure: three bytes */
#define MT9M114REG_LONG_EXPOSURE	       0x3500

/*
 * bit[5]: Gain delay option: 0-one frame latch; 1-delay one frame latch
 * bit[4]: choose delay option: 0-delay disable; 1-delay enable
 * bit[1]: AGC manual enable
 * bit[0]: AEC manual enable
 */
#define MT9M114REG_AEC_MANUAL		0x3503

/* exposure: three bytes */
#define MT9M114REG_SHORT_EXPOSURE	0x3506

#define MT9M114REG_GAIN_CONVERT		0x3509

#define MT9M114REG_AEC_GAIN		       0x350a

/*
 * bit[7:4]: lane num
 * bit[0]: 1-mipi;0-dvp
 */
#define MT9M114REG_MIPI_SC_CTRL0		0x3011

/*
 * bit[7:4]: disable each lane
 * bit[3]: phy mode; 1-mipi;0-dvp
 */
#define MT9M114REG_MIPI_SC_CTRL2		0x3015

#define MT9M114REG_GENERAL_COLORBAR	0x5e00
#define MT9M114REG_GROUP_ACCESS	       0x3208

/***********************************************************************
 *
 * mt9m114_byd init sensor registers list
 *
 ***********************************************************************/
/* default is 1600*1200 9fps 2lane */
const struct _sensor_reg_t mt9m114_byd_init_regs[] = {

//[Initialization]
{0x301A, 0x0230, 0x00, 2},		// RESET_REGISTER
{0x098E, 0x1000, 0x00, 2},
{0xC97E, 0x01  , 0x00, 1},	//cam_sysctl_pll_enable = 1
{0xC980, 0x0460, 0x00, 2},		//cam_sysctl_pll_divider_m_n = 1120
{0xC982, 0x0700, 0x00, 2},		//cam_sysctl_pll_divider_p = 1792
//{0xC984, 0x8001, 0x00, 2},		//cam_port_output_control = 32769
//{0xC988, 0x0F00, 0x00, 2},		//cam_port_mipi_timing_t_hs_zero = 3840
//{0xC98A, 0x0B07, 0x00, 2},		//cam_port_mipi_timing_t_hs_exit_hs_trail = 2823
//{0xC98C, 0x0D01, 0x00, 2},		//cam_port_mipi_timing_t_clk_post_clk_pre = 3329
//{0xC98E, 0x071D, 0x00, 2},		//cam_port_mipi_timing_t_clk_trail_clk_zero = 1821
//{0xC990, 0x0006, 0x00, 2},		//cam_port_mipi_timing_t_lpx = 6
//{0xC992, 0x0A0C, 0x00, 2},		//cam_port_mipi_timing_init_timing = 2572
{0xC800, 0x0004, 0x00, 2},		//cam_sensor_cfg_y_addr_start = 4
{0xC802, 0x0004, 0x00, 2},		//cam_sensor_cfg_x_addr_start = 4
{0xC804, 0x03CB, 0x00, 2},		//cam_sensor_cfg_y_addr_end = 971
{0xC806, 0x050B, 0x00, 2},		//cam_sensor_cfg_x_addr_end = 1291
{0xC808, 0x2DC6C00, 0x00, 4},		//cam_sensor_cfg_pixclk = 48000000
{0xC80C, 0x0001, 0x00, 2},		//cam_sensor_cfg_row_speed = 1
{0xC80E, 0x00DB, 0x00, 2},		//cam_sensor_cfg_fine_integ_time_min = 219
{0xC810, 0x05B1, 0x00, 2},		//cam_sensor_cfg_fine_integ_time_max = 1457
{0xC812, 0x03FD, 0x00, 2},		//cam_sensor_cfg_frame_length_lines = 1021
{0xC814, 0x0634, 0x00, 2},		//cam_sensor_cfg_line_length_pck = 1588
{0xC816, 0x0060, 0x00, 2},		//cam_sensor_cfg_fine_correction = 96
{0xC818, 0x03C3, 0x00, 2},		//cam_sensor_cfg_cpipe_last_row = 963
{0xC826, 0x0020, 0x00, 2},		//cam_sensor_cfg_reg_0_data = 32
{0xC834, 0x0000, 0x00, 2},		//cam_sensor_control_read_mode = 0
{0xC854, 0x0000, 0x00, 2},		//cam_crop_window_xoffset = 0
{0xC856, 0x0000, 0x00, 2},		//cam_crop_window_yoffset = 0
{0xC858, 0x0500, 0x00, 2},		//cam_crop_window_width = 1280
{0xC85A, 0x03C0, 0x00, 2},		//cam_crop_window_height = 960
{0xC85C, 0x03  , 0x00, 1},	//cam_crop_cropmode = 3
{0xC868, 0x0500, 0x00, 2},		//cam_output_width = 1280
{0xC86A, 0x03C0, 0x00, 2},		//cam_output_height = 960
{0xC878, 0x00  , 0x00, 1},	//cam_aet_aemode = 0
{0xC88C, 0x1D9B, 0x00, 2},		//cam_aet_max_frame_rate = 7579
{0xC88E, 0x0A00, 0x00, 2},		//cam_aet_min_frame_rate = 2560
{0xC914, 0x0000, 0x00, 2},		//cam_stat_awb_clip_window_xstart = 0
{0xC916, 0x0000, 0x00, 2},		//cam_stat_awb_clip_window_ystart = 0
{0xC918, 0x04FF, 0x00, 2},		//cam_stat_awb_clip_window_xend = 1279
{0xC91A, 0x03BF, 0x00, 2},		//cam_stat_awb_clip_window_yend = 959
{0xC91C, 0x0000, 0x00, 2},		//cam_stat_ae_initial_window_xstart = 0
{0xC91E, 0x0000, 0x00, 2},		//cam_stat_ae_initial_window_ystart = 0
{0xC920, 0x00FF, 0x00, 2},		//cam_stat_ae_initial_window_xend = 255
{0xC922, 0x00BF, 0x00, 2},

{0xDC00, 0x28  , 0x00, 1},
{0x0080, 0x8002, 0x00, 2},

//  POLL  COMMAND_REGISTER::HOST_COMMAND_1 =>  0x00 // 读Reg= 0x0080， 判断其Bit1位是否为0， 如果不为0，则delay 5ms，然后继续读，
// 直到为0或者   50ms以上
/* 0x02: mask bit 1 */
{0x0000, 50, 0x00, 0},

// Sensor mization
{0x316A, 0x8270, 0x00, 2},
{0x316C, 0x8270, 0x00, 2},
{0x3ED0, 0x2305, 0x00, 2},  //{0x3ED0, {2}, {0x3605}},
{0x3ED2, 0x77CF, 0x00, 2},
{0x316E, 0x8202, 0x00, 2},  //{0x316E, {2}, {0x8203}},
{0x3180, 0x87FF, 0x00, 2},
{0x30D4, 0x6080, 0x00, 2},
{0xA802, 0x0008, 0x00, 2},        // AE_TRACK_MODE
{0x3E14, 0xFF39, 0x00, 2},
{0x301A, 0x0234, 0x00, 2},

//MIPI setting for SOC1040
{0x3C5A, 0x0009, 0x00, 2},
{0x3C44, 0x0080, 0x00, 2},       //  /*MIPI_CUSTOM_SHORT_PKT*/
// 

// [Patch 0302; Feature Recommended; Adaptive Sensitivity]34: FIELD_WR=ACCESS_CTL_STAT, {2}, {0x0001
//[patch 1204]for 720P
{0x0982, 0x0001, 0x00, 2}, 	// ACCESS_CTL_STAT
{0x098A, 0x60BC, 0x00, 2}, 	// PHYSICAL_ADDRESS_ACCESS
{0xE0BC, 0xC0F1, 0x00, 2},
{0xE0BE, 0x082A, 0x00, 2},
{0xE0C0, 0x05A0, 0x00, 2},
{0xE0C2, 0xD800, 0x00, 2},
{0xE0C4, 0x71CF, 0x00, 2},
{0xE0C6, 0xFFFF, 0x00, 2},
{0xE0C8, 0xC344, 0x00, 2},
{0xE0CA, 0x77CF, 0x00, 2},
{0xE0CC, 0xFFFF, 0x00, 2},
{0xE0CE, 0xC7C0, 0x00, 2},
{0xE0D0, 0xB104, 0x00, 2},
{0xE0D2, 0x8F1F, 0x00, 2},
{0xE0D4, 0x75CF, 0x00, 2},
{0xE0D6, 0xFFFF, 0x00, 2},
{0xE0D8, 0xC84C, 0x00, 2},
{0xE0DA, 0x0811, 0x00, 2},
{0xE0DC, 0x005E, 0x00, 2},
{0xE0DE, 0x70CF, 0x00, 2},
{0xE0E0, 0x0000, 0x00, 2},
{0xE0E2, 0x500E, 0x00, 2},
{0xE0E4, 0x7840, 0x00, 2},
{0xE0E6, 0xF019, 0x00, 2},
{0xE0E8, 0x0CC6, 0x00, 2},
{0xE0EA, 0x0340, 0x00, 2},
{0xE0EC, 0x0E26, 0x00, 2},
{0xE0EE, 0x0340, 0x00, 2},
{0xE0F0, 0x95C2, 0x00, 2},
{0xE0F2, 0x0E21, 0x00, 2},
{0xE0F4, 0x101E, 0x00, 2},
{0xE0F6, 0x0E0D, 0x00, 2},
{0xE0F8, 0x119E, 0x00, 2},
{0xE0FA, 0x0D56, 0x00, 2},
{0xE0FC, 0x0340, 0x00, 2},
{0xE0FE, 0xF008, 0x00, 2},
{0xE100, 0x2650, 0x00, 2},
{0xE102, 0x1040, 0x00, 2},
{0xE104, 0x0AA2, 0x00, 2},
{0xE106, 0x0360, 0x00, 2},
{0xE108, 0xB502, 0x00, 2},
{0xE10A, 0xB5C2, 0x00, 2},
{0xE10C, 0x0B22, 0x00, 2},
{0xE10E, 0x0400, 0x00, 2},
{0xE110, 0x0CCE, 0x00, 2},
{0xE112, 0x0320, 0x00, 2},
{0xE114, 0xD800, 0x00, 2},
{0xE116, 0x70CF, 0x00, 2},
{0xE118, 0xFFFF, 0x00, 2},
{0xE11A, 0xC5D4, 0x00, 2},
{0xE11C, 0x902C, 0x00, 2},
{0xE11E, 0x72CF, 0x00, 2},
{0xE120, 0xFFFF, 0x00, 2},
{0xE122, 0xE218, 0x00, 2},
{0xE124, 0x9009, 0x00, 2},
{0xE126, 0xE105, 0x00, 2},
{0xE128, 0x73CF, 0x00, 2},
{0xE12A, 0xFF00, 0x00, 2},
{0xE12C, 0x2FD0, 0x00, 2},
{0xE12E, 0x7822, 0x00, 2},
{0xE130, 0x7910, 0x00, 2},
{0xE132, 0xB202, 0x00, 2},
{0xE134, 0x1382, 0x00, 2},
{0xE136, 0x0700, 0x00, 2},
{0xE138, 0x0815, 0x00, 2},
{0xE13A, 0x03DE, 0x00, 2},
{0xE13C, 0x1387, 0x00, 2},
{0xE13E, 0x0700, 0x00, 2},
{0xE140, 0x2102, 0x00, 2},
{0xE142, 0x000A, 0x00, 2},
{0xE144, 0x212F, 0x00, 2},
{0xE146, 0x0288, 0x00, 2},
{0xE148, 0x1A04, 0x00, 2},
{0xE14A, 0x0284, 0x00, 2},
{0xE14C, 0x13B9, 0x00, 2},
{0xE14E, 0x0700, 0x00, 2},
{0xE150, 0xB8C1, 0x00, 2},
{0xE152, 0x0815, 0x00, 2},
{0xE154, 0x0052, 0x00, 2},
{0xE156, 0xDB00, 0x00, 2},
{0xE158, 0x230F, 0x00, 2},
{0xE15A, 0x0003, 0x00, 2},
{0xE15C, 0x2102, 0x00, 2},
{0xE15E, 0x00C0, 0x00, 2},
{0xE160, 0x7910, 0x00, 2},
{0xE162, 0xB202, 0x00, 2},
{0xE164, 0x9507, 0x00, 2},
{0xE166, 0x7822, 0x00, 2},
{0xE168, 0xE080, 0x00, 2},
{0xE16A, 0xD900, 0x00, 2},
{0xE16C, 0x20CA, 0x00, 2},
{0xE16E, 0x004B, 0x00, 2},
{0xE170, 0xB805, 0x00, 2},
{0xE172, 0x9533, 0x00, 2},
{0xE174, 0x7815, 0x00, 2},
{0xE176, 0x6038, 0x00, 2},
{0xE178, 0x0FB2, 0x00, 2},
{0xE17A, 0x0560, 0x00, 2},
{0xE17C, 0xB861, 0x00, 2},
{0xE17E, 0xB711, 0x00, 2},
{0xE180, 0x0775, 0x00, 2},
{0xE182, 0x0540, 0x00, 2},
{0xE184, 0xD900, 0x00, 2},
{0xE186, 0xF00A, 0x00, 2},
{0xE188, 0x70CF, 0x00, 2},
{0xE18A, 0xFFFF, 0x00, 2},
{0xE18C, 0xE210, 0x00, 2},
{0xE18E, 0x7835, 0x00, 2},
{0xE190, 0x8041, 0x00, 2},
{0xE192, 0x8000, 0x00, 2},
{0xE194, 0xE102, 0x00, 2},
{0xE196, 0xA040, 0x00, 2},
{0xE198, 0x09F1, 0x00, 2},
{0xE19A, 0x8094, 0x00, 2},
{0xE19C, 0x7FE0, 0x00, 2},
{0xE19E, 0xD800, 0x00, 2},
{0xE1A0, 0xC0F1, 0x00, 2},
{0xE1A2, 0xC5E1, 0x00, 2},
{0xE1A4, 0x71CF, 0x00, 2},
{0xE1A6, 0x0000, 0x00, 2},
{0xE1A8, 0x45E6, 0x00, 2},
{0xE1AA, 0x7960, 0x00, 2},
{0xE1AC, 0x7508, 0x00, 2},
{0xE1AE, 0x70CF, 0x00, 2},
{0xE1B0, 0xFFFF, 0x00, 2},
{0xE1B2, 0xC84C, 0x00, 2},
{0xE1B4, 0x9002, 0x00, 2},
{0xE1B6, 0x083D, 0x00, 2},
{0xE1B8, 0x021E, 0x00, 2},
{0xE1BA, 0x0D39, 0x00, 2},
{0xE1BC, 0x10D1, 0x00, 2},
{0xE1BE, 0x70CF, 0x00, 2},
{0xE1C0, 0xFF00, 0x00, 2},
{0xE1C2, 0x3354, 0x00, 2},
{0xE1C4, 0x9055, 0x00, 2},
{0xE1C6, 0x71CF, 0x00, 2},
{0xE1C8, 0xFFFF, 0x00, 2},
{0xE1CA, 0xC5D4, 0x00, 2},
{0xE1CC, 0x116C, 0x00, 2},
{0xE1CE, 0x0103, 0x00, 2},
{0xE1D0, 0x1170, 0x00, 2},
{0xE1D2, 0x00C1, 0x00, 2},
{0xE1D4, 0xE381, 0x00, 2},
{0xE1D6, 0x22C6, 0x00, 2},
{0xE1D8, 0x0F81, 0x00, 2},
{0xE1DA, 0x0000, 0x00, 2},
{0xE1DC, 0x00FF, 0x00, 2},
{0xE1DE, 0x22C4, 0x00, 2},
{0xE1E0, 0x0F82, 0x00, 2},
{0xE1E2, 0xFFFF, 0x00, 2},
{0xE1E4, 0x00FF, 0x00, 2},
{0xE1E6, 0x29C0, 0x00, 2},
{0xE1E8, 0x0222, 0x00, 2},
{0xE1EA, 0x7945, 0x00, 2},
{0xE1EC, 0x7930, 0x00, 2},
{0xE1EE, 0xB035, 0x00, 2},
{0xE1F0, 0x0715, 0x00, 2},
{0xE1F2, 0x0540, 0x00, 2},
{0xE1F4, 0xD900, 0x00, 2},
{0xE1F6, 0xF00A, 0x00, 2},
{0xE1F8, 0x70CF, 0x00, 2},
{0xE1FA, 0xFFFF, 0x00, 2},
{0xE1FC, 0xE224, 0x00, 2},
{0xE1FE, 0x7835, 0x00, 2},
{0xE200, 0x8041, 0x00, 2},
{0xE202, 0x8000, 0x00, 2},
{0xE204, 0xE102, 0x00, 2},
{0xE206, 0xA040, 0x00, 2},
{0xE208, 0x09F1, 0x00, 2},
{0xE20A, 0x8094, 0x00, 2},
{0xE20C, 0x7FE0, 0x00, 2},
{0xE20E, 0xD800, 0x00, 2},
{0xE210, 0xFFFF, 0x00, 2},
{0xE212, 0xCB40, 0x00, 2},
{0xE214, 0xFFFF, 0x00, 2},
{0xE216, 0xE0BC, 0x00, 2},
{0xE218, 0x0000, 0x00, 2},
{0xE21A, 0x0000, 0x00, 2},
{0xE21C, 0x0000, 0x00, 2},
{0xE21E, 0x0000, 0x00, 2},
{0xE220, 0x0000, 0x00, 2},
{0x098E, 0x0000, 0x00, 2}, 	// LOGICAL_ADDRESS_ACCESS
{0xE000, 0x1184, 0x00, 2}, 	// PATCHLDR_LOADER_ADDRESS
{0xE002, 0x1204, 0x00, 2}, 	// PATCHLDR_PATCH_ID
{0xE004, 0x41030202, 0x00, 4}, 	// PATCHLDR_FIRMWARE_ID
//{0xE004, 0x4103
//{0xE006, 0x0202
{0x0080, 0xFFF0, 0x00, 2}, 	// COMMAND_REGISTER
//  POLL  COMMAND_REGISTER::HOST_COMMAND_0 =>  0x00
//  POLL  COMMAND_REGISTER::HOST_COMMAND_0 =>  0x00

//  POLL  COMMAND_REGISTER::HOST_COMMAND_0 =>  0x00
// 读{0x080， 判断其最低位是否为0， 如果不为0，则delay 5ms，然后继续读， 
// 直到为0或者   50ms以上

//delay = 50
{0x0000, 50, 0x00, 0},

{0x0080, 0xFFF1, 0x00, 2}, 	// COMMAND_REGISTER
//  POLL  COMMAND_REGISTER::HOST_COMMAND_0 =>  0x00
// 读{0x080， 判断其最低位是否为0， 如果不为0，则delay 5ms，然后继续读， 
// 直到为0或者   50ms以上

//delay = 50
{0x0000, 50, 0x00, 0},

//  Lens register settings for A-1040SOC (MT9M114) REV2
//[APGA Settings 90% 2012/05/24 12:19:26]
{0x3640, 0x00F0, 0x00, 2}, 	//  P_G1_P0Q0
{0x3642, 0xA30A, 0x00, 2}, 	//  P_G1_P0Q1
{0x3644, 0x4070, 0x00, 2}, 	//  P_G1_P0Q2
{0x3646, 0x05AD, 0x00, 2}, 	//  P_G1_P0Q3
{0x3648, 0x6C8F, 0x00, 2}, 	//  P_G1_P0Q4
{0x364A, 0x00D0, 0x00, 2}, 	//  P_R_P0Q0
{0x364C, 0x530A, 0x00, 2}, 	//  P_R_P0Q1
{0x364E, 0x17B1, 0x00, 2}, 	//  P_R_P0Q2
{0x3650, 0x700D, 0x00, 2}, 	//  P_R_P0Q3
{0x3652, 0x2E2F, 0x00, 2}, 	//  P_R_P0Q4
{0x3654, 0x00D0, 0x00, 2}, 	//  P_B_P0Q0
{0x3656, 0x66AB, 0x00, 2}, 	//  P_B_P0Q1
{0x3658, 0x0C30, 0x00, 2}, 	//  P_B_P0Q2
{0x365A, 0x656C, 0x00, 2}, 	//  P_B_P0Q3
{0x365C, 0x0CD0, 0x00, 2}, 	//  P_B_P0Q4
{0x365E, 0x00F0, 0x00, 2}, 	//  P_G2_P0Q0
{0x3660, 0xA56A, 0x00, 2}, 	//  P_G2_P0Q1
{0x3662, 0x3FD0, 0x00, 2}, 	//  P_G2_P0Q2
{0x3664, 0x072D, 0x00, 2}, 	//  P_G2_P0Q3
{0x3666, 0x702F, 0x00, 2}, 	//  P_G2_P0Q4
{0x3680, 0x33AA, 0x00, 2}, 	//  P_G1_P1Q0
{0x3682, 0x0889, 0x00, 2}, 	//  P_G1_P1Q1
{0x3684, 0x50CD, 0x00, 2}, 	//  P_G1_P1Q2
{0x3686, 0xE7AC, 0x00, 2}, 	//  P_G1_P1Q3
{0x3688, 0xFD0F, 0x00, 2}, 	//  P_G1_P1Q4
{0x368A, 0xA18B, 0x00, 2}, 	//  P_R_P1Q0
{0x368C, 0x668A, 0x00, 2}, 	//  P_R_P1Q1
{0x368E, 0x736E, 0x00, 2}, 	//  P_R_P1Q2
{0x3690, 0xE368, 0x00, 2}, 	//  P_R_P1Q3
{0x3692, 0x8390, 0x00, 2}, 	//  P_R_P1Q4
{0x3694, 0x76AA, 0x00, 2}, 	//  P_B_P1Q0
{0x3696, 0xB04C, 0x00, 2}, 	//  P_B_P1Q1
{0x3698, 0x316D, 0x00, 2}, 	//  P_B_P1Q2
{0x369A, 0x4129, 0x00, 2}, 	//  P_B_P1Q3
{0x369C, 0xF9EF, 0x00, 2}, 	//  P_B_P1Q4
{0x369E, 0x2C8A, 0x00, 2}, 	//  P_G2_P1Q0
{0x36A0, 0x0A09, 0x00, 2}, 	//  P_G2_P1Q1
{0x36A2, 0x602D, 0x00, 2}, 	//  P_G2_P1Q2
{0x36A4, 0xE9CC, 0x00, 2}, 	//  P_G2_P1Q3
{0x36A6, 0x8470, 0x00, 2}, 	//  P_G2_P1Q4
{0x36C0, 0x7270, 0x00, 2}, 	//  P_G1_P2Q0
{0x36C2, 0x09AE, 0x00, 2}, 	//  P_G1_P2Q1
{0x36C4, 0x0C11, 0x00, 2}, 	//  P_G1_P2Q2
{0x36C6, 0xA72F, 0x00, 2}, 	//  P_G1_P2Q3
{0x36C8, 0x3110, 0x00, 2}, 	//  P_G1_P2Q4
{0x36CA, 0x2851, 0x00, 2}, 	//  P_R_P2Q0
{0x36CC, 0x73AE, 0x00, 2}, 	//  P_R_P2Q1
{0x36CE, 0x0232, 0x00, 2}, 	//  P_R_P2Q2
{0x36D0, 0x9430, 0x00, 2}, 	//  P_R_P2Q3
{0x36D2, 0xCAF1, 0x00, 2}, 	//  P_R_P2Q4
{0x36D4, 0x33B0, 0x00, 2}, 	//  P_B_P2Q0
{0x36D6, 0x776B, 0x00, 2}, 	//  P_B_P2Q1
{0x36D8, 0x4D71, 0x00, 2}, 	//  P_B_P2Q2
{0x36DA, 0x56EC, 0x00, 2}, 	//  P_B_P2Q3
{0x36DC, 0x8C10, 0x00, 2}, 	//  P_B_P2Q4
{0x36DE, 0x71D0, 0x00, 2}, 	//  P_G2_P2Q0
{0x36E0, 0x112E, 0x00, 2}, 	//  P_G2_P2Q1
{0x36E2, 0x0EF1, 0x00, 2}, 	//  P_G2_P2Q2
{0x36E4, 0xC04F, 0x00, 2}, 	//  P_G2_P2Q3
{0x36E6, 0x18D0, 0x00, 2}, 	//  P_G2_P2Q4
{0x3700, 0x47CC, 0x00, 2}, 	//  P_G1_P3Q0
{0x3702, 0xB72E, 0x00, 2}, 	//  P_G1_P3Q1
{0x3704, 0xE4F1, 0x00, 2}, 	//  P_G1_P3Q2
{0x3706, 0x0C30, 0x00, 2}, 	//  P_G1_P3Q3
{0x3708, 0x1CD3, 0x00, 2}, 	//  P_G1_P3Q4
{0x370A, 0xDF8C, 0x00, 2}, 	//  P_R_P3Q0
{0x370C, 0xDFEE, 0x00, 2}, 	//  P_R_P3Q1
{0x370E, 0x8112, 0x00, 2}, 	//  P_R_P3Q2
{0x3710, 0x0710, 0x00, 2}, 	//  P_R_P3Q3
{0x3712, 0x3FF3, 0x00, 2}, 	//  P_R_P3Q4
{0x3714, 0x140E, 0x00, 2}, 	//  P_B_P3Q0
{0x3716, 0x80AE, 0x00, 2}, 	//  P_B_P3Q1
{0x3718, 0xEE91, 0x00, 2}, 	//  P_B_P3Q2
{0x371A, 0x3550, 0x00, 2}, 	//  P_B_P3Q3
{0x371C, 0x29B3, 0x00, 2}, 	//  P_B_P3Q4
{0x371E, 0x58AC, 0x00, 2}, 	//  P_G2_P3Q0
{0x3720, 0xB9CE, 0x00, 2}, 	//  P_G2_P3Q1
{0x3722, 0xEEB1, 0x00, 2}, 	//  P_G2_P3Q2
{0x3724, 0x0FD0, 0x00, 2}, 	//  P_G2_P3Q3
{0x3726, 0x2513, 0x00, 2}, 	//  P_G2_P3Q4
{0x3740, 0xA74F, 0x00, 2}, 	//  P_G1_P4Q0
{0x3742, 0xD7CE, 0x00, 2}, 	//  P_G1_P4Q1
{0x3744, 0x7C33, 0x00, 2}, 	//  P_G1_P4Q2
{0x3746, 0x644F, 0x00, 2}, 	//  P_G1_P4Q3
{0x3748, 0xA856, 0x00, 2}, 	//  P_G1_P4Q4
{0x374A, 0x000C, 0x00, 2}, 	//  P_R_P4Q0
{0x374C, 0xE8AE, 0x00, 2}, 	//  P_R_P4Q1
{0x374E, 0x1EF3, 0x00, 2}, 	//  P_R_P4Q2
{0x3750, 0x0971, 0x00, 2}, 	//  P_R_P4Q3
{0x3752, 0xAEF6, 0x00, 2}, 	//  P_R_P4Q4
{0x3754, 0x2F8E, 0x00, 2}, 	//  P_B_P4Q0
{0x3756, 0x688E, 0x00, 2}, 	//  P_B_P4Q1
{0x3758, 0x1453, 0x00, 2}, 	//  P_B_P4Q2
{0x375A, 0x828E, 0x00, 2}, 	//  P_B_P4Q3
{0x375C, 0xF095, 0x00, 2}, 	//  P_B_P4Q4
{0x375E, 0xA1AF, 0x00, 2}, 	//  P_G2_P4Q0
{0x3760, 0x826F, 0x00, 2}, 	//  P_G2_P4Q1
{0x3762, 0x7A13, 0x00, 2}, 	//  P_G2_P4Q2
{0x3764, 0x3DB0, 0x00, 2}, 	//  P_G2_P4Q3
{0x3766, 0xA6B6, 0x00, 2}, 	//  P_G2_P4Q4
{0x3784, 0x0278, 0x00, 2}, 	//  CENTER_COLUMN
{0x3782, 0x01C4, 0x00, 2}, 	//  CENTER_ROW
{0x37C0, 0xDBAA, 0x00, 2}, 	//  P_GR_Q5
{0x37C2, 0xBB2A, 0x00, 2}, 	//  P_RD_Q5
{0x37C4, 0x8ECA, 0x00, 2}, 	//  P_BL_Q5
{0x37C6, 0xDD6A, 0x00, 2}, 	//  P_GB_Q5
{0x098E, 0x0000, 0x00, 2}, 	//  LOGICAL addressing
{0xC960, 0x0B54, 0x00, 2}, 	//  CAM_PGA_L_CONFIG_COLOUR_TEMP
{0xC962, 0x7823, 0x00, 2}, 	//  CAM_PGA_L_CONFIG_GREEN_RED_Q14
{0xC964, 0x64E4, 0x00, 2}, 	//  CAM_PGA_L_CONFIG_RED_Q14
{0xC966, 0x782D, 0x00, 2}, 	//  CAM_PGA_L_CONFIG_GREEN_BLUE_Q14
{0xC968, 0x7B4C, 0x00, 2}, 	//  CAM_PGA_L_CONFIG_BLUE_Q14
{0xC96A, 0x0F6E, 0x00, 2}, 	//  CAM_PGA_M_CONFIG_COLOUR_TEMP
{0xC96C, 0x7AE9, 0x00, 2}, 	//  CAM_PGA_M_CONFIG_GREEN_RED_Q14
{0xC96E, 0x7E75, 0x00, 2}, 	//  CAM_PGA_M_CONFIG_RED_Q14
{0xC970, 0x7ADA, 0x00, 2}, 	//  CAM_PGA_M_CONFIG_GREEN_BLUE_Q14
{0xC972, 0x8051, 0x00, 2}, 	//  CAM_PGA_M_CONFIG_BLUE_Q14
{0xC974, 0x1964, 0x00, 2}, 	//  CAM_PGA_R_CONFIG_COLOUR_TEMP
{0xC976, 0x7E49, 0x00, 2}, 	//  CAM_PGA_R_CONFIG_GREEN_RED_Q14
{0xC978, 0x7E8A, 0x00, 2}, 	//  CAM_PGA_R_CONFIG_RED_Q14
{0xC97A, 0x7E45, 0x00, 2}, 	//  CAM_PGA_R_CONFIG_GREEN_BLUE_Q14
{0xC97C, 0x7EE3, 0x00, 2}, 	//  CAM_PGA_R_CONFIG_BLUE_Q14
{0xC95E, 0x0003, 0x00, 2}, 	//  CAM_PGA_PGA_CONTROL


//[Step5-AWB_CCM]
//[Color Correction Matrices 06/04/11 15:35:24]
{0x098E, 0x0000, 0x00, 2},
{0xC892, 0x01C3, 0x00, 2},
{0xC894, 0xFF17, 0x00, 2},
{0xC896, 0x0026, 0x00, 2},
{0xC898, 0xFFB6, 0x00, 2},
{0xC89A, 0x0128, 0x00, 2},
{0xC89C, 0x0022, 0x00, 2},
{0xC89E, 0xFF97, 0x00, 2},
{0xC8A0, 0xFF15, 0x00, 2},
{0xC8A2, 0x0256, 0x00, 2},
{0xC8A4, 0x01DA, 0x00, 2},
{0xC8A6, 0xFF07, 0x00, 2},
{0xC8A8, 0x001F, 0x00, 2},
{0xC8AA, 0xFFC3, 0x00, 2},
{0xC8AC, 0x0156, 0x00, 2},
{0xC8AE, 0xFFE8, 0x00, 2},
{0xC8B0, 0xFFCD, 0x00, 2},
{0xC8B2, 0xFF3A, 0x00, 2},
{0xC8B4, 0x01FA, 0x00, 2},
{0xC8B6, 0x01D3, 0x00, 2},
{0xC8B8, 0xFF73, 0x00, 2},
{0xC8BA, 0xFFB9, 0x00, 2},
{0xC8BC, 0xFFA4, 0x00, 2},
{0xC8BE, 0x0170, 0x00, 2},
{0xC8C0, 0xFFEB, 0x00, 2},
{0xC8C2, 0xFFEF, 0x00, 2},
{0xC8C4, 0xFF33, 0x00, 2},
{0xC8C6, 0x01DE, 0x00, 2},
{0xC8C8, 0x0067, 0x00, 2},
{0xC8CA, 0x0117, 0x00, 2},
{0xC8CC, 0x0093, 0x00, 2},
{0xC8CE, 0x00FE, 0x00, 2},
{0xC8D0, 0x00A6, 0x00, 2},
{0xC8D2, 0x008C, 0x00, 2},
{0xC8D4, 0x09C4, 0x00, 2},
{0xC8D6, 0x0D67, 0x00, 2},
{0xC8D8, 0x1964, 0x00, 2},
{0xC8F2, 0x03  , 0x00, 1},
{0xC8F3, 0x02  , 0x00, 1},
{0xC8F4, 0x7E60, 0x00, 2},
{0xC8F6, 0xAC56, 0x00, 2},
{0xC8F8, 0x4EC9, 0x00, 2},
{0xC8FA, 0xF378, 0x00, 2},
{0xC8FC, 0xC7D8, 0x00, 2},
{0xC8FE, 0x92D8, 0x00, 2},
{0xC900, 0x25D9, 0x00, 2},
{0xC902, 0xB292, 0x00, 2},
{0xC904, 0x003C, 0x00, 2},
{0xC906, 0x0037, 0x00, 2},



{0xC90C, 0x83, 0x00, 1},
{0xC90D, 0x80, 0x00, 1},
{0xC90E, 0x81, 0x00, 1},
{0xC90F, 0x80, 0x00, 1},
{0xC910, 0x80, 0x00, 1},
{0xC911, 0x7b, 0x00, 1},


{0xAC06, 0x64, 0x00, 1},
{0xAC08, 0x64, 0x00, 1},

//[Step7]
{0x098E, 0x4926, 0x00, 2},
{0xC926, 0x0020, 0x00, 2},
{0xC928, 0x009A, 0x00, 2},
{0xC946, 0x0070, 0x00, 2},
{0xC948, 0x00F3, 0x00, 2},
{0xC952, 0x0020, 0x00, 2},
{0xC954, 0x009A, 0x00, 2},
{0xC92A, 0x99, 0x00, 1},
{0xC92B, 0x70, 0x00, 1},
{0xC92C, 0x00, 0x00, 1},
{0xC92D, 0xA0, 0x00, 1},
{0xC92E, 0x3C, 0x00, 1},
{0xC92F, 0x01, 0x00, 1},
{0xC930, 0x06, 0x00, 1},
{0xC931, 0x64, 0x00, 1},
{0xC932, 0x00, 0x00, 1},
{0xC933, 0x0C, 0x00, 1},
{0xC934, 0x3C, 0x00, 1},
{0xC935, 0x3C, 0x00, 1},
{0xC936, 0x3C, 0x00, 1},
{0xC937, 0x0F, 0x00, 1},
{0xC938, 0x64, 0x00, 1},
{0xC939, 0x64, 0x00, 1},
{0xC93A, 0x64, 0x00, 1},
{0xC93B, 0x32, 0x00, 1},
{0xC93C, 0x0020, 0x00, 2},
{0xC93E, 0x009A, 0x00, 2},
{0xC940, 0x00ff, 0x00, 2},
{0xC942, 0x3c, 0x00, 1},
{0xC943, 0x30, 0x00, 1},
{0xC944, 0x4c, 0x00, 1},
{0xC945, 0x19, 0x00, 1},
{0xC94A, 0x0230, 0x00, 2},
{0xC94C, 0x0010, 0x00, 2},
{0xC94E, 0x01CD, 0x00, 2},
{0xC950, 0x05, 0x00, 1},
{0xC951, 0x40, 0x00, 1},
{0xC87B, 0x1B, 0x00, 1},
{0xC878, 0x0c, 0x00, 1},
{0xC890, 0x0040, 0x00, 2},
{0xC886, 0x0100, 0x00, 2},
{0xC87C, 0x005A, 0x00, 2},
{0xB42A, 0x05, 0x00, 1},
{0xA80A, 0x20, 0x00, 1},

{0xBC02, 0x0007, 0x00, 2},

// 
//[Step8-Features]
{0xC984, 0x8041, 0x00, 2},       // CAM_PORT_OUTPUT_CONTROL
{0xC988, 0x0F00, 0x00, 2},       // CAM_PORT_MIPI_TIMING_T_HS_ZERO
{0xC98A, 0x0B07, 0x00, 2},       // CAM_PORT_MIPI_TIMING_T_HS_EXIT_HS_TRAIL
{0xC98C, 0x0D01, 0x00, 2},       // CAM_PORT_MIPI_TIMING_T_CLK_POST_CLK_PRE
{0xC98E, 0x071D, 0x00, 2},       // CAM_PORT_MIPI_TIMING_T_CLK_TRAIL_CLK_ZERO
{0xC990, 0x0006, 0x00, 2},       // CAM_PORT_MIPI_TIMING_T_LPX
{0xC992, 0x0A0C, 0x00, 2},       // CAM_PORT_MIPI_TIMING_INIT_TIMING
//  

//satuations for byd only 20120508
{0xC92A, 0xAC, 0x00, 1}, //0x99
{0xC92B, 0x70, 0x00, 1},

{0xC90F, 0x88, 0x00, 1},// 0x90
//end 20120508

//[Anti-Flicker for MT9M114][50Hz]
{0x098E, 0xC88B, 0x00, 2},       // LOGICAL_ADDRESS_ACCESS [CAM_AET_FLICKER_FREQ_HZ]
{0xC88B, 0x32, 0x00, 1}, 	// CAM_AET_FLICKER_FREQ_HZ


{0xA804, 0x00BF, 0x00, 2},
//AWB Start point
{0x098E, 0x48F0, 0x00, 2},
//{0xC8F0, {2}, {0x0d8e}},
{0xC8F0, 0x11ea, 0x00, 2},

//For gamma
{0xC87A, 0x49  , 0x00, 1}, 	// CAM_AET_TARGET_AVERAGE_LUMA
{0x098E, 0xB00C, 0x00, 2},       // LOGICAL_ADDRESS_ACCESS [BLACKLEVEL_MAX_BLACK_LEVEL]
{0xB00C, 0x1B  , 0x00, 1}, 	// BLACKLEVEL_MAX_BLACK_LEVEL
{0xB004, 0x0004, 0x00, 2},       // BLACKLEVEL_ALGO

//[Change-Config]
{0x098E, 0xDC00, 0x00, 2},       // LOGICAL_ADDRESS_ACCESS [SYSMGR_NEXT_STATE]
{0xDC00, 0x28  , 0x00, 1}, 	// SYSMGR_NEXT_STATE
{0x0080, 0x8002, 0x00, 2},       // COMMAND_REGISTER
//DELAY=200 //{ DELAY, { 100  
{0x0000, 200, 0x00, 0},
};

/***********************************************************************
 *
 * mt9m114_foxconn init sensor registers list
 *
 ***********************************************************************/
/* default is 1600*1200 9fps 2lane */
const struct _sensor_reg_t mt9m114_foxconn_init_regs[] = {
//[Initiaion]
{0x301A, 0x0230, 0x00, 2},		// RESET_REGISTER
{0x098E, 0x1000, 0x00, 2},
{0xC97E, 0x01  , 0x00, 1},	//cam_sysctl_pll_enable = 1
{0xC980, 0x0460, 0x00, 2},		//cam_sysctl_pll_divider_m_n = 1120
{0xC982, 0x0700, 0x00, 2},		//cam_sysctl_pll_divider_p = 1792
//{0xC984, 0x8001, 0x00, 2},		//cam_port_output_control = 32769
//{0xC988, 0x0F00, 0x00, 2},		//cam_port_mipi_timing_t_hs_zero = 3840
//{0xC98A, 0x0B07, 0x00, 2},		//cam_port_mipi_timing_t_hs_exit_hs_trail = 2823
//{0xC98C, 0x0D01, 0x00, 2},		//cam_port_mipi_timing_t_clk_post_clk_pre = 3329
//{0xC98E, 0x071D, 0x00, 2},		//cam_port_mipi_timing_t_clk_trail_clk_zero = 1821
//{0xC990, 0x0006, 0x00, 2},		//cam_port_mipi_timing_t_lpx = 6
//{0xC992, 0x0A0C, 0x00, 2},		//cam_port_mipi_timing_init_timing = 2572
{0xC800, 0x0004, 0x00, 2},		//cam_sensor_cfg_y_addr_start = 4
{0xC802, 0x0004, 0x00, 2},		//cam_sensor_cfg_x_addr_start = 4
{0xC804, 0x03CB, 0x00, 2},		//cam_sensor_cfg_y_addr_end = 971
{0xC806, 0x050B, 0x00, 2},		//cam_sensor_cfg_x_addr_end = 1291
{0xC808, 0x2DC6C00, 0x00, 4},		//cam_sensor_cfg_pixclk = 48000000
{0xC80C, 0x0001, 0x00, 2},		//cam_sensor_cfg_row_speed = 1
{0xC80E, 0x00DB, 0x00, 2},		//cam_sensor_cfg_fine_integ_time_min = 219
{0xC810, 0x05B1, 0x00, 2},		//cam_sensor_cfg_fine_integ_time_max = 1457
{0xC812, 0x03FD, 0x00, 2},		//cam_sensor_cfg_frame_length_lines = 1021
{0xC814, 0x0634, 0x00, 2},		//cam_sensor_cfg_line_length_pck = 1588
{0xC816, 0x0060, 0x00, 2},		//cam_sensor_cfg_fine_correction = 96
{0xC818, 0x03C3, 0x00, 2},		//cam_sensor_cfg_cpipe_last_row = 963
{0xC826, 0x0020, 0x00, 2},		//cam_sensor_cfg_reg_0_data = 32
{0xC834, 0x0000, 0x00, 2},		//cam_sensor_control_read_mode = 0
{0xC854, 0x0000, 0x00, 2},		//cam_crop_window_xoffset = 0
{0xC856, 0x0000, 0x00, 2},		//cam_crop_window_yoffset = 0
{0xC858, 0x0500, 0x00, 2},		//cam_crop_window_width = 1280
{0xC85A, 0x03C0, 0x00, 2},		//cam_crop_window_height = 960
{0xC85C, 0x03  , 0x00, 1},	//cam_crop_cropmode = 3
{0xC868, 0x0500, 0x00, 2},		//cam_output_width = 1280
{0xC86A, 0x03C0, 0x00, 2},		//cam_output_height = 960
{0xC878, 0x00  , 0x00, 1},	//cam_aet_aemode = 0
{0xC88C, 0x1D9B, 0x00, 2},		//cam_aet_max_frame_rate = 7579
{0xC88E, 0x0A00, 0x00, 2},		//cam_aet_min_frame_rate = 2560
{0xC914, 0x0000, 0x00, 2},		//cam_stat_awb_clip_window_xstart = 0
{0xC916, 0x0000, 0x00, 2},		//cam_stat_awb_clip_window_ystart = 0
{0xC918, 0x04FF, 0x00, 2},		//cam_stat_awb_clip_window_xend = 1279
{0xC91A, 0x03BF, 0x00, 2},		//cam_stat_awb_clip_window_yend = 959
{0xC91C, 0x0000, 0x00, 2},		//cam_stat_ae_initial_window_xstart = 0
{0xC91E, 0x0000, 0x00, 2},		//cam_stat_ae_initial_window_ystart = 0
{0xC920, 0x00FF, 0x00, 2},		//cam_stat_ae_initial_window_xend = 255
{0xC922, 0x00BF, 0x00, 2},

{0xDC00, 0x28  , 0x00, 1},
{0x0080, 0x8002, 0x00, 2},

//  POLL  COMMAND_REGISTER::HOST_COMMAND_1 =>  0x00 // 读Reg= 0x0080， 判断其Bit1位是否为0， 如果不为0，则delay 5ms，然后继续读，
// 直到为0或者   50ms以上
/* 0x02: mask bit 1 */
{0x0000, 50, 0x00, 0},

// Sensor mization
{0x316A, 0x8270, 0x00, 2},
{0x316C, 0x8270, 0x00, 2},
{0x3ED0, 0x2305, 0x00, 2},  //{0x3ED0, {2}, {0x3605}},
{0x3ED2, 0x77CF, 0x00, 2},
{0x316E, 0x8202, 0x00, 2},  //{0x316E, {2}, {0x8203}},
{0x3180, 0x87FF, 0x00, 2},
{0x30D4, 0x6080, 0x00, 2},
{0xA802, 0x0008, 0x00, 2},        // AE_TRACK_MODE
{0x3E14, 0xFF39, 0x00, 2},
{0x301A, 0x0234, 0x00, 2},

//MIPI setting for SOC1040
{0x3C5A, 0x0009, 0x00, 2},
{0x3C44, 0x0080, 0x00, 2},       //  /*MIPI_CUSTOM_SHORT_PKT*/
// 

// [Patch 0302; Feature Recommended; Adaptive Sensitivity]34: FIELD_WR=ACCESS_CTL_STAT, {2}, {0x0001
//[patch 1204]for 720P
{0x0982, 0x0001, 0x00, 2}, 	// ACCESS_CTL_STAT
{0x098A, 0x60BC, 0x00, 2}, 	// PHYSICAL_ADDRESS_ACCESS
{0xE0BC, 0xC0F1, 0x00, 2},
{0xE0BE, 0x082A, 0x00, 2},
{0xE0C0, 0x05A0, 0x00, 2},
{0xE0C2, 0xD800, 0x00, 2},
{0xE0C4, 0x71CF, 0x00, 2},
{0xE0C6, 0xFFFF, 0x00, 2},
{0xE0C8, 0xC344, 0x00, 2},
{0xE0CA, 0x77CF, 0x00, 2},
{0xE0CC, 0xFFFF, 0x00, 2},
{0xE0CE, 0xC7C0, 0x00, 2},
{0xE0D0, 0xB104, 0x00, 2},
{0xE0D2, 0x8F1F, 0x00, 2},
{0xE0D4, 0x75CF, 0x00, 2},
{0xE0D6, 0xFFFF, 0x00, 2},
{0xE0D8, 0xC84C, 0x00, 2},
{0xE0DA, 0x0811, 0x00, 2},
{0xE0DC, 0x005E, 0x00, 2},
{0xE0DE, 0x70CF, 0x00, 2},
{0xE0E0, 0x0000, 0x00, 2},
{0xE0E2, 0x500E, 0x00, 2},
{0xE0E4, 0x7840, 0x00, 2},
{0xE0E6, 0xF019, 0x00, 2},
{0xE0E8, 0x0CC6, 0x00, 2},
{0xE0EA, 0x0340, 0x00, 2},
{0xE0EC, 0x0E26, 0x00, 2},
{0xE0EE, 0x0340, 0x00, 2},
{0xE0F0, 0x95C2, 0x00, 2},
{0xE0F2, 0x0E21, 0x00, 2},
{0xE0F4, 0x101E, 0x00, 2},
{0xE0F6, 0x0E0D, 0x00, 2},
{0xE0F8, 0x119E, 0x00, 2},
{0xE0FA, 0x0D56, 0x00, 2},
{0xE0FC, 0x0340, 0x00, 2},
{0xE0FE, 0xF008, 0x00, 2},
{0xE100, 0x2650, 0x00, 2},
{0xE102, 0x1040, 0x00, 2},
{0xE104, 0x0AA2, 0x00, 2},
{0xE106, 0x0360, 0x00, 2},
{0xE108, 0xB502, 0x00, 2},
{0xE10A, 0xB5C2, 0x00, 2},
{0xE10C, 0x0B22, 0x00, 2},
{0xE10E, 0x0400, 0x00, 2},
{0xE110, 0x0CCE, 0x00, 2},
{0xE112, 0x0320, 0x00, 2},
{0xE114, 0xD800, 0x00, 2},
{0xE116, 0x70CF, 0x00, 2},
{0xE118, 0xFFFF, 0x00, 2},
{0xE11A, 0xC5D4, 0x00, 2},
{0xE11C, 0x902C, 0x00, 2},
{0xE11E, 0x72CF, 0x00, 2},
{0xE120, 0xFFFF, 0x00, 2},
{0xE122, 0xE218, 0x00, 2},
{0xE124, 0x9009, 0x00, 2},
{0xE126, 0xE105, 0x00, 2},
{0xE128, 0x73CF, 0x00, 2},
{0xE12A, 0xFF00, 0x00, 2},
{0xE12C, 0x2FD0, 0x00, 2},
{0xE12E, 0x7822, 0x00, 2},
{0xE130, 0x7910, 0x00, 2},
{0xE132, 0xB202, 0x00, 2},
{0xE134, 0x1382, 0x00, 2},
{0xE136, 0x0700, 0x00, 2},
{0xE138, 0x0815, 0x00, 2},
{0xE13A, 0x03DE, 0x00, 2},
{0xE13C, 0x1387, 0x00, 2},
{0xE13E, 0x0700, 0x00, 2},
{0xE140, 0x2102, 0x00, 2},
{0xE142, 0x000A, 0x00, 2},
{0xE144, 0x212F, 0x00, 2},
{0xE146, 0x0288, 0x00, 2},
{0xE148, 0x1A04, 0x00, 2},
{0xE14A, 0x0284, 0x00, 2},
{0xE14C, 0x13B9, 0x00, 2},
{0xE14E, 0x0700, 0x00, 2},
{0xE150, 0xB8C1, 0x00, 2},
{0xE152, 0x0815, 0x00, 2},
{0xE154, 0x0052, 0x00, 2},
{0xE156, 0xDB00, 0x00, 2},
{0xE158, 0x230F, 0x00, 2},
{0xE15A, 0x0003, 0x00, 2},
{0xE15C, 0x2102, 0x00, 2},
{0xE15E, 0x00C0, 0x00, 2},
{0xE160, 0x7910, 0x00, 2},
{0xE162, 0xB202, 0x00, 2},
{0xE164, 0x9507, 0x00, 2},
{0xE166, 0x7822, 0x00, 2},
{0xE168, 0xE080, 0x00, 2},
{0xE16A, 0xD900, 0x00, 2},
{0xE16C, 0x20CA, 0x00, 2},
{0xE16E, 0x004B, 0x00, 2},
{0xE170, 0xB805, 0x00, 2},
{0xE172, 0x9533, 0x00, 2},
{0xE174, 0x7815, 0x00, 2},
{0xE176, 0x6038, 0x00, 2},
{0xE178, 0x0FB2, 0x00, 2},
{0xE17A, 0x0560, 0x00, 2},
{0xE17C, 0xB861, 0x00, 2},
{0xE17E, 0xB711, 0x00, 2},
{0xE180, 0x0775, 0x00, 2},
{0xE182, 0x0540, 0x00, 2},
{0xE184, 0xD900, 0x00, 2},
{0xE186, 0xF00A, 0x00, 2},
{0xE188, 0x70CF, 0x00, 2},
{0xE18A, 0xFFFF, 0x00, 2},
{0xE18C, 0xE210, 0x00, 2},
{0xE18E, 0x7835, 0x00, 2},
{0xE190, 0x8041, 0x00, 2},
{0xE192, 0x8000, 0x00, 2},
{0xE194, 0xE102, 0x00, 2},
{0xE196, 0xA040, 0x00, 2},
{0xE198, 0x09F1, 0x00, 2},
{0xE19A, 0x8094, 0x00, 2},
{0xE19C, 0x7FE0, 0x00, 2},
{0xE19E, 0xD800, 0x00, 2},
{0xE1A0, 0xC0F1, 0x00, 2},
{0xE1A2, 0xC5E1, 0x00, 2},
{0xE1A4, 0x71CF, 0x00, 2},
{0xE1A6, 0x0000, 0x00, 2},
{0xE1A8, 0x45E6, 0x00, 2},
{0xE1AA, 0x7960, 0x00, 2},
{0xE1AC, 0x7508, 0x00, 2},
{0xE1AE, 0x70CF, 0x00, 2},
{0xE1B0, 0xFFFF, 0x00, 2},
{0xE1B2, 0xC84C, 0x00, 2},
{0xE1B4, 0x9002, 0x00, 2},
{0xE1B6, 0x083D, 0x00, 2},
{0xE1B8, 0x021E, 0x00, 2},
{0xE1BA, 0x0D39, 0x00, 2},
{0xE1BC, 0x10D1, 0x00, 2},
{0xE1BE, 0x70CF, 0x00, 2},
{0xE1C0, 0xFF00, 0x00, 2},
{0xE1C2, 0x3354, 0x00, 2},
{0xE1C4, 0x9055, 0x00, 2},
{0xE1C6, 0x71CF, 0x00, 2},
{0xE1C8, 0xFFFF, 0x00, 2},
{0xE1CA, 0xC5D4, 0x00, 2},
{0xE1CC, 0x116C, 0x00, 2},
{0xE1CE, 0x0103, 0x00, 2},
{0xE1D0, 0x1170, 0x00, 2},
{0xE1D2, 0x00C1, 0x00, 2},
{0xE1D4, 0xE381, 0x00, 2},
{0xE1D6, 0x22C6, 0x00, 2},
{0xE1D8, 0x0F81, 0x00, 2},
{0xE1DA, 0x0000, 0x00, 2},
{0xE1DC, 0x00FF, 0x00, 2},
{0xE1DE, 0x22C4, 0x00, 2},
{0xE1E0, 0x0F82, 0x00, 2},
{0xE1E2, 0xFFFF, 0x00, 2},
{0xE1E4, 0x00FF, 0x00, 2},
{0xE1E6, 0x29C0, 0x00, 2},
{0xE1E8, 0x0222, 0x00, 2},
{0xE1EA, 0x7945, 0x00, 2},
{0xE1EC, 0x7930, 0x00, 2},
{0xE1EE, 0xB035, 0x00, 2},
{0xE1F0, 0x0715, 0x00, 2},
{0xE1F2, 0x0540, 0x00, 2},
{0xE1F4, 0xD900, 0x00, 2},
{0xE1F6, 0xF00A, 0x00, 2},
{0xE1F8, 0x70CF, 0x00, 2},
{0xE1FA, 0xFFFF, 0x00, 2},
{0xE1FC, 0xE224, 0x00, 2},
{0xE1FE, 0x7835, 0x00, 2},
{0xE200, 0x8041, 0x00, 2},
{0xE202, 0x8000, 0x00, 2},
{0xE204, 0xE102, 0x00, 2},
{0xE206, 0xA040, 0x00, 2},
{0xE208, 0x09F1, 0x00, 2},
{0xE20A, 0x8094, 0x00, 2},
{0xE20C, 0x7FE0, 0x00, 2},
{0xE20E, 0xD800, 0x00, 2},
{0xE210, 0xFFFF, 0x00, 2},
{0xE212, 0xCB40, 0x00, 2},
{0xE214, 0xFFFF, 0x00, 2},
{0xE216, 0xE0BC, 0x00, 2},
{0xE218, 0x0000, 0x00, 2},
{0xE21A, 0x0000, 0x00, 2},
{0xE21C, 0x0000, 0x00, 2},
{0xE21E, 0x0000, 0x00, 2},
{0xE220, 0x0000, 0x00, 2},
{0x098E, 0x0000, 0x00, 2}, 	// LOGICAL_ADDRESS_ACCESS
{0xE000, 0x1184, 0x00, 2}, 	// PATCHLDR_LOADER_ADDRESS
{0xE002, 0x1204, 0x00, 2}, 	// PATCHLDR_PATCH_ID
{0xE004, 0x41030202, 0x00, 4}, 	// PATCHLDR_FIRMWARE_ID
//{0xE004, 0x4103
//{0xE006, 0x0202
{0x0080, 0xFFF0, 0x00, 2}, 	// COMMAND_REGISTER
//  POLL  COMMAND_REGISTER::HOST_COMMAND_0 =>  0x00
//  POLL  COMMAND_REGISTER::HOST_COMMAND_0 =>  0x00

//  POLL  COMMAND_REGISTER::HOST_COMMAND_0 =>  0x00
// 读{0x080， 判断其最低位是否为0， 如果不为0，则delay 5ms，然后继续读， 
// 直到为0或者   50ms以上

//delay = 50
{0x0000, 50, 0x00, 0},

{0x0080, 0xFFF1, 0x00, 2}, 	// COMMAND_REGISTER
//  POLL  COMMAND_REGISTER::HOST_COMMAND_0 =>  0x00
// 读{0x080， 判断其最低位是否为0， 如果不为0，则delay 5ms，然后继续读， 
// 直到为0或者   50ms以上

//delay = 50
{0x0000, 50, 0x00, 0},
        

//  Lens register settings for A-1040SOC (MT9M114) REV2
//[APGA Settings 90% 2012/05/24 11:24:54]
{0x3640, 0x00D0, 0x00, 2}, 	//  P_G1_P0Q0
{0x3642, 0x15E9, 0x00, 2}, 	//  P_G1_P0Q1
{0x3644, 0x5050, 0x00, 2}, 	//  P_G1_P0Q2
{0x3646, 0xDF6B, 0x00, 2}, 	//  P_G1_P0Q3
{0x3648, 0x6A0F, 0x00, 2}, 	//  P_G1_P0Q4
{0x364A, 0x00F0, 0x00, 2}, 	//  P_R_P0Q0
{0x364C, 0x206B, 0x00, 2}, 	//  P_R_P0Q1
{0x364E, 0x21B1, 0x00, 2}, 	//  P_R_P0Q2
{0x3650, 0x29E9, 0x00, 2}, 	//  P_R_P0Q3
{0x3652, 0x61CF, 0x00, 2}, 	//  P_R_P0Q4
{0x3654, 0x0130, 0x00, 2}, 	//  P_B_P0Q0
{0x3656, 0x008A, 0x00, 2}, 	//  P_B_P0Q1
{0x3658, 0x1810, 0x00, 2}, 	//  P_B_P0Q2
{0x365A, 0x4647, 0x00, 2}, 	//  P_B_P0Q3
{0x365C, 0x2590, 0x00, 2}, 	//  P_B_P0Q4
{0x365E, 0x00D0, 0x00, 2}, 	//  P_G2_P0Q0
{0x3660, 0x1AC9, 0x00, 2}, 	//  P_G2_P0Q1
{0x3662, 0x5090, 0x00, 2}, 	//  P_G2_P0Q2
{0x3664, 0xE4EB, 0x00, 2}, 	//  P_G2_P0Q3
{0x3666, 0x67AF, 0x00, 2}, 	//  P_G2_P0Q4
{0x3680, 0xC0C6, 0x00, 2}, 	//  P_G1_P1Q0
{0x3682, 0x360A, 0x00, 2}, 	//  P_G1_P1Q1
{0x3684, 0x0D0C, 0x00, 2}, 	//  P_G1_P1Q2
{0x3686, 0x81CC, 0x00, 2}, 	//  P_G1_P1Q3
{0x3688, 0xB6ED, 0x00, 2}, 	//  P_G1_P1Q4
{0x368A, 0x8C0C, 0x00, 2}, 	//  P_R_P1Q0
{0x368C, 0x242A, 0x00, 2}, 	//  P_R_P1Q1
{0x368E, 0x458C, 0x00, 2}, 	//  P_R_P1Q2
{0x3690, 0x26ED, 0x00, 2}, 	//  P_R_P1Q3
{0x3692, 0x10AD, 0x00, 2}, 	//  P_R_P1Q4
{0x3694, 0x91E8, 0x00, 2}, 	//  P_B_P1Q0
{0x3696, 0xBCCB, 0x00, 2}, 	//  P_B_P1Q1
{0x3698, 0x996F, 0x00, 2}, 	//  P_B_P1Q2
{0x369A, 0xD14E, 0x00, 2}, 	//  P_B_P1Q3
{0x369C, 0x03D0, 0x00, 2}, 	//  P_B_P1Q4
{0x369E, 0x8507, 0x00, 2}, 	//  P_G2_P1Q0
{0x36A0, 0x2EAA, 0x00, 2}, 	//  P_G2_P1Q1
{0x36A2, 0x2F4C, 0x00, 2}, 	//  P_G2_P1Q2
{0x36A4, 0x816C, 0x00, 2}, 	//  P_G2_P1Q3
{0x36A6, 0xD9CD, 0x00, 2}, 	//  P_G2_P1Q4
{0x36C0, 0x0231, 0x00, 2}, 	//  P_G1_P2Q0
{0x36C2, 0x9CED, 0x00, 2}, 	//  P_G1_P2Q1
{0x36C4, 0x61F1, 0x00, 2}, 	//  P_G1_P2Q2
{0x36C6, 0x4CF0, 0x00, 2}, 	//  P_G1_P2Q3
{0x36C8, 0x7B2E, 0x00, 2}, 	//  P_G1_P2Q4
{0x36CA, 0x3551, 0x00, 2}, 	//  P_R_P2Q0
{0x36CC, 0x0AEC, 0x00, 2}, 	//  P_R_P2Q1
{0x36CE, 0x2572, 0x00, 2}, 	//  P_R_P2Q2
{0x36D0, 0x694E, 0x00, 2}, 	//  P_R_P2Q3
{0x36D2, 0xFCF1, 0x00, 2}, 	//  P_R_P2Q4
{0x36D4, 0x39F0, 0x00, 2}, 	//  P_B_P2Q0
{0x36D6, 0x6F2D, 0x00, 2}, 	//  P_B_P2Q1
{0x36D8, 0x3E92, 0x00, 2}, 	//  P_B_P2Q2
{0x36DA, 0x8B6F, 0x00, 2}, 	//  P_B_P2Q3
{0x36DC, 0xCBD2, 0x00, 2}, 	//  P_B_P2Q4
{0x36DE, 0x0251, 0x00, 2}, 	//  P_G2_P2Q0
{0x36E0, 0x952D, 0x00, 2}, 	//  P_G2_P2Q1
{0x36E2, 0x6071, 0x00, 2}, 	//  P_G2_P2Q2
{0x36E4, 0x45D0, 0x00, 2}, 	//  P_G2_P2Q3
{0x36E6, 0x1CEF, 0x00, 2}, 	//  P_G2_P2Q4
{0x3700, 0xB66D, 0x00, 2}, 	//  P_G1_P3Q0
{0x3702, 0xB78C, 0x00, 2}, 	//  P_G1_P3Q1
{0x3704, 0x8411, 0x00, 2}, 	//  P_G1_P3Q2
{0x3706, 0x118E, 0x00, 2}, 	//  P_G1_P3Q3
{0x3708, 0x4BF1, 0x00, 2}, 	//  P_G1_P3Q4
{0x370A, 0x97AE, 0x00, 2}, 	//  P_R_P3Q0
{0x370C, 0xA38C, 0x00, 2}, 	//  P_R_P3Q1
{0x370E, 0xBEB0, 0x00, 2}, 	//  P_R_P3Q2
{0x3710, 0xCCCF, 0x00, 2}, 	//  P_R_P3Q3
{0x3712, 0x59B0, 0x00, 2}, 	//  P_R_P3Q4
{0x3714, 0x060C, 0x00, 2}, 	//  P_B_P3Q0
{0x3716, 0x86EC, 0x00, 2}, 	//  P_B_P3Q1
{0x3718, 0x194F, 0x00, 2}, 	//  P_B_P3Q2
{0x371A, 0x76D0, 0x00, 2}, 	//  P_B_P3Q3
{0x371C, 0xDBB1, 0x00, 2}, 	//  P_B_P3Q4
{0x371E, 0xB1AD, 0x00, 2}, 	//  P_G2_P3Q0
{0x3720, 0x9A8C, 0x00, 2}, 	//  P_G2_P3Q1
{0x3722, 0x8B91, 0x00, 2}, 	//  P_G2_P3Q2
{0x3724, 0x062E, 0x00, 2}, 	//  P_G2_P3Q3
{0x3726, 0x5C51, 0x00, 2}, 	//  P_G2_P3Q4
{0x3740, 0xD8CE, 0x00, 2}, 	//  P_G1_P4Q0
{0x3742, 0x3430, 0x00, 2}, 	//  P_G1_P4Q1
{0x3744, 0x5093, 0x00, 2}, 	//  P_G1_P4Q2
{0x3746, 0xAA53, 0x00, 2}, 	//  P_G1_P4Q3
{0x3748, 0xB076, 0x00, 2}, 	//  P_G1_P4Q4
{0x374A, 0x30EF, 0x00, 2}, 	//  P_R_P4Q0
{0x374C, 0x12CF, 0x00, 2}, 	//  P_R_P4Q1
{0x374E, 0x30D3, 0x00, 2}, 	//  P_R_P4Q2
{0x3750, 0xCBB2, 0x00, 2}, 	//  P_R_P4Q3
{0x3752, 0xD356, 0x00, 2}, 	//  P_R_P4Q4
{0x3754, 0x26B0, 0x00, 2}, 	//  P_B_P4Q0
{0x3756, 0xB5AB, 0x00, 2}, 	//  P_B_P4Q1
{0x3758, 0x7F71, 0x00, 2}, 	//  P_B_P4Q2
{0x375A, 0xA150, 0x00, 2}, 	//  P_B_P4Q3
{0x375C, 0xFBB5, 0x00, 2}, 	//  P_B_P4Q4
{0x375E, 0xDCAE, 0x00, 2}, 	//  P_G2_P4Q0
{0x3760, 0x30D0, 0x00, 2}, 	//  P_G2_P4Q1
{0x3762, 0x5193, 0x00, 2}, 	//  P_G2_P4Q2
{0x3764, 0xA693, 0x00, 2}, 	//  P_G2_P4Q3
{0x3766, 0xB196, 0x00, 2}, 	//  P_G2_P4Q4
{0x3784, 0x028C, 0x00, 2}, 	//  CENTER_COLUMN
{0x3782, 0x01E0, 0x00, 2}, 	//  CENTER_ROW
{0x37C0, 0xCEEA, 0x00, 2}, 	//  P_GR_Q5
{0x37C2, 0xF16A, 0x00, 2}, 	//  P_RD_Q5
{0x37C4, 0xF0AA, 0x00, 2}, 	//  P_BL_Q5
{0x37C6, 0xCD8A, 0x00, 2}, 	//  P_GB_Q5
{0x098E, 0x0000, 0x00, 2}, 	//  LOGICAL addressing
{0xC960, 0x0B54, 0x00, 2}, 	//  CAM_PGA_L_CONFIG_COLOUR_TEMP
{0xC962, 0x775A, 0x00, 2}, 	//  CAM_PGA_L_CONFIG_GREEN_RED_Q14
{0xC964, 0x6490, 0x00, 2}, 	//  CAM_PGA_L_CONFIG_RED_Q14
{0xC966, 0x7760, 0x00, 2}, 	//  CAM_PGA_L_CONFIG_GREEN_BLUE_Q14
{0xC968, 0x7C74, 0x00, 2}, 	//  CAM_PGA_L_CONFIG_BLUE_Q14
{0xC96A, 0x0F6E, 0x00, 2}, 	//  CAM_PGA_M_CONFIG_COLOUR_TEMP
{0xC96C, 0x7B95, 0x00, 2}, 	//  CAM_PGA_M_CONFIG_GREEN_RED_Q14
{0xC96E, 0x7FA8, 0x00, 2}, 	//  CAM_PGA_M_CONFIG_RED_Q14
{0xC970, 0x7B87, 0x00, 2}, 	//  CAM_PGA_M_CONFIG_GREEN_BLUE_Q14
{0xC972, 0x815E, 0x00, 2}, 	//  CAM_PGA_M_CONFIG_BLUE_Q14
{0xC974, 0x1964, 0x00, 2}, 	//  CAM_PGA_R_CONFIG_COLOUR_TEMP
{0xC976, 0x7E62, 0x00, 2}, 	//  CAM_PGA_R_CONFIG_GREEN_RED_Q14
{0xC978, 0x7E1D, 0x00, 2}, 	//  CAM_PGA_R_CONFIG_RED_Q14
{0xC97A, 0x7E65, 0x00, 2}, 	//  CAM_PGA_R_CONFIG_GREEN_BLUE_Q14
{0xC97C, 0x7E1F, 0x00, 2}, 	//  CAM_PGA_R_CONFIG_BLUE_Q14
{0xC95E, 0x0003, 0x00, 2}, 	//  CAM_PGA_PGA_CONTROL


//[Step5-AWB_CCM]
//[Color Correction Matrices 06/04/11 15:35:24]
{0x098E, 0x0000, 0x00, 2},
{0xC892, 0x01C3, 0x00, 2},
{0xC894, 0xFF17, 0x00, 2},
{0xC896, 0x0026, 0x00, 2},
{0xC898, 0xFFB6, 0x00, 2},
{0xC89A, 0x0128, 0x00, 2},
{0xC89C, 0x0022, 0x00, 2},
{0xC89E, 0xFF97, 0x00, 2},
{0xC8A0, 0xFF15, 0x00, 2},
{0xC8A2, 0x0256, 0x00, 2},
{0xC8A4, 0x01DA, 0x00, 2},
{0xC8A6, 0xFF07, 0x00, 2},
{0xC8A8, 0x001F, 0x00, 2},
{0xC8AA, 0xFFC3, 0x00, 2},
{0xC8AC, 0x0156, 0x00, 2},
{0xC8AE, 0xFFE8, 0x00, 2},
{0xC8B0, 0xFFCD, 0x00, 2},
{0xC8B2, 0xFF3A, 0x00, 2},
{0xC8B4, 0x01FA, 0x00, 2},
{0xC8B6, 0x01D3, 0x00, 2},
{0xC8B8, 0xFF73, 0x00, 2},
{0xC8BA, 0xFFB9, 0x00, 2},
{0xC8BC, 0xFFA4, 0x00, 2},
{0xC8BE, 0x0170, 0x00, 2},
{0xC8C0, 0xFFEB, 0x00, 2},
{0xC8C2, 0xFFEF, 0x00, 2},
{0xC8C4, 0xFF33, 0x00, 2},
{0xC8C6, 0x01DE, 0x00, 2},
{0xC8C8, 0x0067, 0x00, 2},
{0xC8CA, 0x0117, 0x00, 2},
{0xC8CC, 0x0093, 0x00, 2},
{0xC8CE, 0x00FE, 0x00, 2},
{0xC8D0, 0x00A6, 0x00, 2},
{0xC8D2, 0x008C, 0x00, 2},
{0xC8D4, 0x09C4, 0x00, 2},
{0xC8D6, 0x0D67, 0x00, 2},
{0xC8D8, 0x1964, 0x00, 2},
{0xC8F2, 0x03  , 0x00, 1},
{0xC8F3, 0x02  , 0x00, 1},
{0xC8F4, 0x7E60, 0x00, 2},
{0xC8F6, 0xAC56, 0x00, 2},
{0xC8F8, 0x4EC9, 0x00, 2},
{0xC8FA, 0xF378, 0x00, 2},
{0xC8FC, 0xC7D8, 0x00, 2},
{0xC8FE, 0x92D8, 0x00, 2},
{0xC900, 0x25D9, 0x00, 2},
{0xC902, 0xB292, 0x00, 2},
{0xC904, 0x003C, 0x00, 2},
{0xC906, 0x0037, 0x00, 2},



{0xC90C, 0x83, 0x00, 1},
{0xC90D, 0x80, 0x00, 1},
{0xC90E, 0x81, 0x00, 1},
{0xC90F, 0x80, 0x00, 1},
{0xC910, 0x80, 0x00, 1},
{0xC911, 0x7b, 0x00, 1},


{0xAC06, 0x64, 0x00, 1},
{0xAC08, 0x64, 0x00, 1},

//[Step7]
{0x098E, 0x4926, 0x00, 2},
{0xC926, 0x0020, 0x00, 2},
{0xC928, 0x009A, 0x00, 2},
{0xC946, 0x0070, 0x00, 2},
{0xC948, 0x00F3, 0x00, 2},
{0xC952, 0x0020, 0x00, 2},
{0xC954, 0x009A, 0x00, 2},
{0xC92A, 0x99, 0x00, 1},
{0xC92B, 0x70, 0x00, 1},
{0xC92C, 0x00, 0x00, 1},
{0xC92D, 0xA0, 0x00, 1},
{0xC92E, 0x3C, 0x00, 1},
{0xC92F, 0x01, 0x00, 1},
{0xC930, 0x06, 0x00, 1},
{0xC931, 0x64, 0x00, 1},
{0xC932, 0x00, 0x00, 1},
{0xC933, 0x0C, 0x00, 1},
{0xC934, 0x3C, 0x00, 1},
{0xC935, 0x3C, 0x00, 1},
{0xC936, 0x3C, 0x00, 1},
{0xC937, 0x0F, 0x00, 1},
{0xC938, 0x64, 0x00, 1},
{0xC939, 0x64, 0x00, 1},
{0xC93A, 0x64, 0x00, 1},
{0xC93B, 0x32, 0x00, 1},
{0xC93C, 0x0020, 0x00, 2},
{0xC93E, 0x009A, 0x00, 2},
{0xC940, 0x00ff, 0x00, 2},
{0xC942, 0x3c, 0x00, 1},
{0xC943, 0x30, 0x00, 1},
{0xC944, 0x4c, 0x00, 1},
{0xC945, 0x19, 0x00, 1},
{0xC94A, 0x0230, 0x00, 2},
{0xC94C, 0x0010, 0x00, 2},
{0xC94E, 0x01CD, 0x00, 2},
{0xC950, 0x05, 0x00, 1},
{0xC951, 0x40, 0x00, 1},
{0xC87B, 0x1B, 0x00, 1},
{0xC878, 0x0c, 0x00, 1},
{0xC890, 0x0040, 0x00, 2},
{0xC886, 0x0100, 0x00, 2},
{0xC87C, 0x005A, 0x00, 2},
{0xB42A, 0x05, 0x00, 1},
{0xA80A, 0x20, 0x00, 1},

{0xBC02, 0x0007, 0x00, 2},

//
//[Step8-Features]
{0xC984, 0x8041, 0x00, 2},       // CAM_PORT_OUTPUT_CONTROL
{0xC988, 0x0F00, 0x00, 2},       // CAM_PORT_MIPI_TIMING_T_HS_ZERO
{0xC98A, 0x0B07, 0x00, 2},       // CAM_PORT_MIPI_TIMING_T_HS_EXIT_HS_TRAIL
{0xC98C, 0x0D01, 0x00, 2},       // CAM_PORT_MIPI_TIMING_T_CLK_POST_CLK_PRE
{0xC98E, 0x071D, 0x00, 2},       // CAM_PORT_MIPI_TIMING_T_CLK_TRAIL_CLK_ZERO
{0xC990, 0x0006, 0x00, 2},       // CAM_PORT_MIPI_TIMING_T_LPX
{0xC992, 0x0A0C, 0x00, 2},       // CAM_PORT_MIPI_TIMING_INIT_TIMING
//

//satuations for foxconn only 20120508
{0xC92A, 0xB0, 0x00, 1}, //0x99,0x9E
{0xC92B, 0x70, 0x00, 1},

{0xC90F, 0x88, 0x00, 1},// 0x90
//end 20120508



//[Anti-Flicker for MT9M114][50Hz]
{0x098E, 0xC88B, 0x00, 2},       // LOGICAL_ADDRESS_ACCESS [CAM_AET_FLICKER_FREQ_HZ]
{0xC88B, 0x32  , 0x00, 1}, 	// CAM_AET_FLICKER_FREQ_HZ


{0xA804, 0x00BF, 0x00, 2},
//AWB Start point
{0x098E, 0x48F0, 0x00, 2},
//{0xC8F0, {2}, {0x0d8e}},
{0xC8F0, 0x11ea, 0x00, 2},


//For gamma
{0xC87A, 0x49  , 0x00, 1}, 	// CAM_AET_TARGET_AVERAGE_LUMA
{0x098E, 0xB00C, 0x00, 2},       // LOGICAL_ADDRESS_ACCESS [BLACKLEVEL_MAX_BLACK_LEVEL]
{0xB00C, 0x1B  , 0x00, 1}, 	// BLACKLEVEL_MAX_BLACK_LEVEL
{0xB004, 0x0004, 0x00, 2},       // BLACKLEVEL_ALGO

//[Change-Config]
{0x098E, 0xDC00, 0x00, 2},       // LOGICAL_ADDRESS_ACCESS [SYSMGR_NEXT_STATE]
{0xDC00, 0x28  , 0x00, 1}, 	// SYSMGR_NEXT_STATE
{0x0080, 0x8002, 0x00, 2},       // COMMAND_REGISTER
//DELAY=200 //{ DELAY, { 100
{0x0000, 200   , 0x00, 0},
};

/***********************************************************************
 *
 * mt9m114_sunny init sensor registers list
 *
 ***********************************************************************/
/* default is 1600*1200 9fps 2lane */
const struct _sensor_reg_t mt9m114_sunny_init_regs[] =
{
//[Initialization]
{0x301A, 0x0230, 0x00, 2},		// RESET_REGISTER
{0x098E, 0x1000, 0x00, 2},
{0xC97E, 0x01  , 0x00, 1},	//cam_sysctl_pll_enable = 1
{0xC980, 0x0460, 0x00, 2},		//cam_sysctl_pll_divider_m_n = 1120
{0xC982, 0x0700, 0x00, 2},		//cam_sysctl_pll_divider_p = 1792
//{0xC984, {0x8001}, 0x00, 2},		//cam_port_output_control = 32769
//{0xC988, {0x0F00}, 0x00, 2},		//cam_port_mipi_timing_t_hs_zero = 3840
//{0xC98A, {0x0B07}, 0x00, 2},		//cam_port_mipi_timing_t_hs_exit_hs_trail = 2823
//{0xC98C, {0x0D01}, 0x00, 2},		//cam_port_mipi_timing_t_clk_post_clk_pre = 3329
//{0xC98E, {0x071D}, 0x00, 2},		//cam_port_mipi_timing_t_clk_trail_clk_zero = 1821
//{0xC990, {0x0006}, 0x00, 2},		//cam_port_mipi_timing_t_lpx = 6
//{0xC992, {0x0A0C}, 0x00, 2},		//cam_port_mipi_timing_init_timing = 2572
{0xC800, 0x0004, 0x00, 2},		//cam_sensor_cfg_y_addr_start = 4
{0xC802, 0x0004, 0x00, 2},		//cam_sensor_cfg_x_addr_start = 4
{0xC804, 0x03CB, 0x00, 2},		//cam_sensor_cfg_y_addr_end = 971
{0xC806, 0x050B, 0x00, 2},		//cam_sensor_cfg_x_addr_end = 1291
{0xC808, 0x2DC6C00, 0x00, 4},		//cam_sensor_cfg_pixclk = 48000000
{0xC80C, 0x0001, 0x00, 2},		//cam_sensor_cfg_row_speed = 1
{0xC80E, 0x00DB, 0x00, 2},		//cam_sensor_cfg_fine_integ_time_min = 219
{0xC810, 0x05B1, 0x00, 2},		//cam_sensor_cfg_fine_integ_time_max = 1457
{0xC812, 0x03FD, 0x00, 2},		//cam_sensor_cfg_frame_length_lines = 1021
{0xC814, 0x0634, 0x00, 2},		//cam_sensor_cfg_line_length_pck = 1588
{0xC816, 0x0060, 0x00, 2},		//cam_sensor_cfg_fine_correction = 96
{0xC818, 0x03C3, 0x00, 2},		//cam_sensor_cfg_cpipe_last_row = 963
{0xC826, 0x0020, 0x00, 2},		//cam_sensor_cfg_reg_0_data = 32
{0xC834, 0x0000, 0x00, 2},		//cam_sensor_control_read_mode = 0
{0xC854, 0x0000, 0x00, 2},		//cam_crop_window_xoffset = 0
{0xC856, 0x0000, 0x00, 2},		//cam_crop_window_yoffset = 0
{0xC858, 0x0500, 0x00, 2},		//cam_crop_window_width = 1280
{0xC85A, 0x03C0, 0x00, 2},		//cam_crop_window_height = 960
{0xC85C, 0x03  , 0x00, 1},	//cam_crop_cropmode = 3
{0xC868, 0x0500, 0x00, 2},		//cam_output_width = 1280
{0xC86A, 0x03C0, 0x00, 2},		//cam_output_height = 960
{0xC878, 0x00  , 0x00, 1},	//cam_aet_aemode = 0
{0xC88C, 0x1D9B, 0x00, 2},		//cam_aet_max_frame_rate = 7579
{0xC88E, 0x0A00, 0x00, 2},		//cam_aet_min_frame_rate = 2560
{0xC914, 0x0000, 0x00, 2},		//cam_stat_awb_clip_window_xstart = 0
{0xC916, 0x0000, 0x00, 2},		//cam_stat_awb_clip_window_ystart = 0
{0xC918, 0x04FF, 0x00, 2},		//cam_stat_awb_clip_window_xend = 1279
{0xC91A, 0x03BF, 0x00, 2},		//cam_stat_awb_clip_window_yend = 959
{0xC91C, 0x0000, 0x00, 2},		//cam_stat_ae_initial_window_xstart = 0
{0xC91E, 0x0000, 0x00, 2},		//cam_stat_ae_initial_window_ystart = 0
{0xC920, 0x00FF, 0x00, 2},		//cam_stat_ae_initial_window_xend = 255
{0xC922, 0x00BF, 0x00, 2},

{0xDC00, 0x28  , 0x00, 1},
{0x0080, 0x8002, 0x00, 2},

//  POLL  COMMAND_REGISTER::HOST_COMMAND_1 =>  0x00 // 读Reg= 0x0080， 判断其Bit1位是否为0， 如果不为0，则delay 5ms，然后继续读，
// 直到为0或者   50ms以上
/* 0x02: mask bit 1 */
{0x0000, 50, 0x00, 0},

{0x098E, 0x2C12, 0x00, 2},
{0xAC12, 0x00B4, 0x00, 2},//AWB_R_GAIN
{0xAC14, 0x009E, 0x00, 2},//AWB_B_GAIN

// Sensor mization
{0x316A, 0x8270, 0x00, 2},
{0x316C, 0x8270, 0x00, 2},
{0x3ED0, 0x2305, 0x00, 2},  //{0x3ED0, {2}, {0x3605}},
{0x3ED2, 0x77CF, 0x00, 2},
{0x316E, 0x8202, 0x00, 2},  //{0x316E, {2}, {0x8203}},
{0x3180, 0x87FF, 0x00, 2},
{0x30D4, 0x6080, 0x00, 2},
{0xA802, 0x0008, 0x00, 2},        // AE_TRACK_MODE
{0x3E14, 0xFF39, 0x00, 2},
{0x301A, 0x0234, 0x00, 2},

//MIPI setting for SOC1040
{0x3C5A, 0x0009, 0x00, 2},
{0x3C44, 0x0080, 0x00, 2},       //  /*MIPI_CUSTOM_SHORT_PKT*/
//

// [Patch 0302; Feature Recommended; Adaptive Sensitivity]34: FIELD_WR=ACCESS_CTL_STAT, {2}, {0x0001
//[patch 1204]for 720P
{0x0982, 0x0001, 0x00, 2}, 	// ACCESS_CTL_STAT
{0x098A, 0x60BC, 0x00, 2}, 	// PHYSICAL_ADDRESS_ACCESS
{0xE0BC, 0xC0F1, 0x00, 2},
{0xE0BE, 0x082A, 0x00, 2},
{0xE0C0, 0x05A0, 0x00, 2},
{0xE0C2, 0xD800, 0x00, 2},
{0xE0C4, 0x71CF, 0x00, 2},
{0xE0C6, 0xFFFF, 0x00, 2},
{0xE0C8, 0xC344, 0x00, 2},
{0xE0CA, 0x77CF, 0x00, 2},
{0xE0CC, 0xFFFF, 0x00, 2},
{0xE0CE, 0xC7C0, 0x00, 2},
{0xE0D0, 0xB104, 0x00, 2},
{0xE0D2, 0x8F1F, 0x00, 2},
{0xE0D4, 0x75CF, 0x00, 2},
{0xE0D6, 0xFFFF, 0x00, 2},
{0xE0D8, 0xC84C, 0x00, 2},
{0xE0DA, 0x0811, 0x00, 2},
{0xE0DC, 0x005E, 0x00, 2},
{0xE0DE, 0x70CF, 0x00, 2},
{0xE0E0, 0x0000, 0x00, 2},
{0xE0E2, 0x500E, 0x00, 2},
{0xE0E4, 0x7840, 0x00, 2},
{0xE0E6, 0xF019, 0x00, 2},
{0xE0E8, 0x0CC6, 0x00, 2},
{0xE0EA, 0x0340, 0x00, 2},
{0xE0EC, 0x0E26, 0x00, 2},
{0xE0EE, 0x0340, 0x00, 2},
{0xE0F0, 0x95C2, 0x00, 2},
{0xE0F2, 0x0E21, 0x00, 2},
{0xE0F4, 0x101E, 0x00, 2},
{0xE0F6, 0x0E0D, 0x00, 2},
{0xE0F8, 0x119E, 0x00, 2},
{0xE0FA, 0x0D56, 0x00, 2},
{0xE0FC, 0x0340, 0x00, 2},
{0xE0FE, 0xF008, 0x00, 2},
{0xE100, 0x2650, 0x00, 2},
{0xE102, 0x1040, 0x00, 2},
{0xE104, 0x0AA2, 0x00, 2},
{0xE106, 0x0360, 0x00, 2},
{0xE108, 0xB502, 0x00, 2},
{0xE10A, 0xB5C2, 0x00, 2},
{0xE10C, 0x0B22, 0x00, 2},
{0xE10E, 0x0400, 0x00, 2},
{0xE110, 0x0CCE, 0x00, 2},
{0xE112, 0x0320, 0x00, 2},
{0xE114, 0xD800, 0x00, 2},
{0xE116, 0x70CF, 0x00, 2},
{0xE118, 0xFFFF, 0x00, 2},
{0xE11A, 0xC5D4, 0x00, 2},
{0xE11C, 0x902C, 0x00, 2},
{0xE11E, 0x72CF, 0x00, 2},
{0xE120, 0xFFFF, 0x00, 2},
{0xE122, 0xE218, 0x00, 2},
{0xE124, 0x9009, 0x00, 2},
{0xE126, 0xE105, 0x00, 2},
{0xE128, 0x73CF, 0x00, 2},
{0xE12A, 0xFF00, 0x00, 2},
{0xE12C, 0x2FD0, 0x00, 2},
{0xE12E, 0x7822, 0x00, 2},
{0xE130, 0x7910, 0x00, 2},
{0xE132, 0xB202, 0x00, 2},
{0xE134, 0x1382, 0x00, 2},
{0xE136, 0x0700, 0x00, 2},
{0xE138, 0x0815, 0x00, 2},
{0xE13A, 0x03DE, 0x00, 2},
{0xE13C, 0x1387, 0x00, 2},
{0xE13E, 0x0700, 0x00, 2},
{0xE140, 0x2102, 0x00, 2},
{0xE142, 0x000A, 0x00, 2},
{0xE144, 0x212F, 0x00, 2},
{0xE146, 0x0288, 0x00, 2},
{0xE148, 0x1A04, 0x00, 2},
{0xE14A, 0x0284, 0x00, 2},
{0xE14C, 0x13B9, 0x00, 2},
{0xE14E, 0x0700, 0x00, 2},
{0xE150, 0xB8C1, 0x00, 2},
{0xE152, 0x0815, 0x00, 2},
{0xE154, 0x0052, 0x00, 2},
{0xE156, 0xDB00, 0x00, 2},
{0xE158, 0x230F, 0x00, 2},
{0xE15A, 0x0003, 0x00, 2},
{0xE15C, 0x2102, 0x00, 2},
{0xE15E, 0x00C0, 0x00, 2},
{0xE160, 0x7910, 0x00, 2},
{0xE162, 0xB202, 0x00, 2},
{0xE164, 0x9507, 0x00, 2},
{0xE166, 0x7822, 0x00, 2},
{0xE168, 0xE080, 0x00, 2},
{0xE16A, 0xD900, 0x00, 2},
{0xE16C, 0x20CA, 0x00, 2},
{0xE16E, 0x004B, 0x00, 2},
{0xE170, 0xB805, 0x00, 2},
{0xE172, 0x9533, 0x00, 2},
{0xE174, 0x7815, 0x00, 2},
{0xE176, 0x6038, 0x00, 2},
{0xE178, 0x0FB2, 0x00, 2},
{0xE17A, 0x0560, 0x00, 2},
{0xE17C, 0xB861, 0x00, 2},
{0xE17E, 0xB711, 0x00, 2},
{0xE180, 0x0775, 0x00, 2},
{0xE182, 0x0540, 0x00, 2},
{0xE184, 0xD900, 0x00, 2},
{0xE186, 0xF00A, 0x00, 2},
{0xE188, 0x70CF, 0x00, 2},
{0xE18A, 0xFFFF, 0x00, 2},
{0xE18C, 0xE210, 0x00, 2},
{0xE18E, 0x7835, 0x00, 2},
{0xE190, 0x8041, 0x00, 2},
{0xE192, 0x8000, 0x00, 2},
{0xE194, 0xE102, 0x00, 2},
{0xE196, 0xA040, 0x00, 2},
{0xE198, 0x09F1, 0x00, 2},
{0xE19A, 0x8094, 0x00, 2},
{0xE19C, 0x7FE0, 0x00, 2},
{0xE19E, 0xD800, 0x00, 2},
{0xE1A0, 0xC0F1, 0x00, 2},
{0xE1A2, 0xC5E1, 0x00, 2},
{0xE1A4, 0x71CF, 0x00, 2},
{0xE1A6, 0x0000, 0x00, 2},
{0xE1A8, 0x45E6, 0x00, 2},
{0xE1AA, 0x7960, 0x00, 2},
{0xE1AC, 0x7508, 0x00, 2},
{0xE1AE, 0x70CF, 0x00, 2},
{0xE1B0, 0xFFFF, 0x00, 2},
{0xE1B2, 0xC84C, 0x00, 2},
{0xE1B4, 0x9002, 0x00, 2},
{0xE1B6, 0x083D, 0x00, 2},
{0xE1B8, 0x021E, 0x00, 2},
{0xE1BA, 0x0D39, 0x00, 2},
{0xE1BC, 0x10D1, 0x00, 2},
{0xE1BE, 0x70CF, 0x00, 2},
{0xE1C0, 0xFF00, 0x00, 2},
{0xE1C2, 0x3354, 0x00, 2},
{0xE1C4, 0x9055, 0x00, 2},
{0xE1C6, 0x71CF, 0x00, 2},
{0xE1C8, 0xFFFF, 0x00, 2},
{0xE1CA, 0xC5D4, 0x00, 2},
{0xE1CC, 0x116C, 0x00, 2},
{0xE1CE, 0x0103, 0x00, 2},
{0xE1D0, 0x1170, 0x00, 2},
{0xE1D2, 0x00C1, 0x00, 2},
{0xE1D4, 0xE381, 0x00, 2},
{0xE1D6, 0x22C6, 0x00, 2},
{0xE1D8, 0x0F81, 0x00, 2},
{0xE1DA, 0x0000, 0x00, 2},
{0xE1DC, 0x00FF, 0x00, 2},
{0xE1DE, 0x22C4, 0x00, 2},
{0xE1E0, 0x0F82, 0x00, 2},
{0xE1E2, 0xFFFF, 0x00, 2},
{0xE1E4, 0x00FF, 0x00, 2},
{0xE1E6, 0x29C0, 0x00, 2},
{0xE1E8, 0x0222, 0x00, 2},
{0xE1EA, 0x7945, 0x00, 2},
{0xE1EC, 0x7930, 0x00, 2},
{0xE1EE, 0xB035, 0x00, 2},
{0xE1F0, 0x0715, 0x00, 2},
{0xE1F2, 0x0540, 0x00, 2},
{0xE1F4, 0xD900, 0x00, 2},
{0xE1F6, 0xF00A, 0x00, 2},
{0xE1F8, 0x70CF, 0x00, 2},
{0xE1FA, 0xFFFF, 0x00, 2},
{0xE1FC, 0xE224, 0x00, 2},
{0xE1FE, 0x7835, 0x00, 2},
{0xE200, 0x8041, 0x00, 2},
{0xE202, 0x8000, 0x00, 2},
{0xE204, 0xE102, 0x00, 2},
{0xE206, 0xA040, 0x00, 2},
{0xE208, 0x09F1, 0x00, 2},
{0xE20A, 0x8094, 0x00, 2},
{0xE20C, 0x7FE0, 0x00, 2},
{0xE20E, 0xD800, 0x00, 2},
{0xE210, 0xFFFF, 0x00, 2},
{0xE212, 0xCB40, 0x00, 2},
{0xE214, 0xFFFF, 0x00, 2},
{0xE216, 0xE0BC, 0x00, 2},
{0xE218, 0x0000, 0x00, 2},
{0xE21A, 0x0000, 0x00, 2},
{0xE21C, 0x0000, 0x00, 2},
{0xE21E, 0x0000, 0x00, 2},
{0xE220, 0x0000, 0x00, 2},
{0x098E, 0x0000, 0x00, 2}, 	// LOGICAL_ADDRESS_ACCESS
{0xE000, 0x1184, 0x00, 2}, 	// PATCHLDR_LOADER_ADDRESS
{0xE002, 0x1204, 0x00, 2}, 	// PATCHLDR_PATCH_ID
{0xE004, 0x41030202, 0x00, 4}, 	// PATCHLDR_FIRMWARE_ID
//{0xE004, 0x4103
//{0xE006, 0x0202
{0x0080, 0xFFF0, 0x00, 2}, 	// COMMAND_REGISTER
//  POLL  COMMAND_REGISTER::HOST_COMMAND_0 =>  0x00
//  POLL  COMMAND_REGISTER::HOST_COMMAND_0 =>  0x00

//  POLL  COMMAND_REGISTER::HOST_COMMAND_0 =>  0x00
// 读{0x080， 判断其最低位是否为0， 如果不为0，则delay 5ms，然后继续读，
// 直到为0或者   50ms以上

//delay = 50
{0x0000, 50, 0x00, 0},

{0x0080, 0xFFF1, 0x00, 2}, 	// COMMAND_REGISTER
//  POLL  COMMAND_REGISTER::HOST_COMMAND_0 =>  0x00
// 读{0x080， 判断其最低位是否为0， 如果不为0，则delay 5ms，然后继续读，
// 直到为0或者   50ms以上

//delay = 50
{0x0000, 50, 0x00, 0},

//Lens register settings for A-1040SOC (MT9M114) REV2
//[APGA Settings 90% 2012/07/05 09:52:00]
{0x3640, 0x01D0, 0x00, 2},	//P_G1_P0Q0
{0x3642, 0xA36C, 0x00, 2},	//P_G1_P0Q1
{0x3644, 0x77F0, 0x00, 2},	//P_G1_P0Q2
{0x3646, 0x1FEC, 0x00, 2},	//P_G1_P0Q3
{0x3648, 0x7C4C, 0x00, 2},	//P_G1_P0Q4
{0x364A, 0x00F0, 0x00, 2},	//P_R_P0Q0
{0x364C, 0xC0EB, 0x00, 2},	//P_R_P0Q1
{0x364E, 0x0371, 0x00, 2},	//P_R_P0Q2
{0x3650, 0x2C0D, 0x00, 2},	//P_R_P0Q3
{0x3652, 0x716F, 0x00, 2},	//P_R_P0Q4
{0x3654, 0x0250, 0x00, 2},	//P_B_P0Q0
{0x3656, 0x78EA, 0x00, 2},	//P_B_P0Q1
{0x3658, 0x5BF0, 0x00, 2},	//P_B_P0Q2
{0x365A, 0x4D8B, 0x00, 2},	//P_B_P0Q3
{0x365C, 0x74EA, 0x00, 2},	//P_B_P0Q4
{0x365E, 0x00F0, 0x00, 2},	//P_G2_P0Q0
{0x3660, 0xD8CC, 0x00, 2},	//P_G2_P0Q1
{0x3662, 0x0251, 0x00, 2},	//P_G2_P0Q2
{0x3664, 0x02EC, 0x00, 2},	//P_G2_P0Q3
{0x3666, 0xE865, 0x00, 2},	//P_G2_P0Q4
{0x3680, 0x46AB, 0x00, 2},	//P_G1_P1Q0
{0x3682, 0x4408, 0x00, 2},	//P_G1_P1Q1
{0x3684, 0x4D0E, 0x00, 2},	//P_G1_P1Q2
{0x3686, 0x75AE, 0x00, 2},	//P_G1_P1Q3
{0x3688, 0x9FAF, 0x00, 2},	//P_G1_P1Q4
{0x368A, 0x2A69, 0x00, 2},	//P_R_P1Q0
{0x368C, 0x160B, 0x00, 2},	//P_R_P1Q1
{0x368E, 0x20CF, 0x00, 2},	//P_R_P1Q2
{0x3690, 0x05CF, 0x00, 2},	//P_R_P1Q3
{0x3692, 0x94F0, 0x00, 2},	//P_R_P1Q4
{0x3694, 0x3D8B, 0x00, 2},	//P_B_P1Q0
{0x3696, 0xDEAB, 0x00, 2},	//P_B_P1Q1
{0x3698, 0x63AC, 0x00, 2},	//P_B_P1Q2
{0x369A, 0x084E, 0x00, 2},	//P_B_P1Q3
{0x369C, 0x940F, 0x00, 2},	//P_B_P1Q4
{0x369E, 0x05EC, 0x00, 2},	//P_G2_P1Q0
{0x36A0, 0xB9C9, 0x00, 2},	//P_G2_P1Q1
{0x36A2, 0x898B, 0x00, 2},	//P_G2_P1Q2
{0x36A4, 0x644C, 0x00, 2},	//P_G2_P1Q3
{0x36A6, 0x828F, 0x00, 2},	//P_G2_P1Q4
{0x36C0, 0x1BB1, 0x00, 2},	//P_G1_P2Q0
{0x36C2, 0xA90E, 0x00, 2},	//P_G1_P2Q1
{0x36C4, 0x3EF1, 0x00, 2},	//P_G1_P2Q2
{0x36C6, 0x24F1, 0x00, 2},	//P_G1_P2Q3
{0x36C8, 0xC2D2, 0x00, 2},	//P_G1_P2Q4
{0x36CA, 0x0D31, 0x00, 2},	//P_R_P2Q0
{0x36CC, 0xDC0E, 0x00, 2},	//P_R_P2Q1
{0x36CE, 0x42B2, 0x00, 2},	//P_R_P2Q2
{0x36D0, 0x67F1, 0x00, 2},	//P_R_P2Q3
{0x36D2, 0xC9F3, 0x00, 2},	//P_R_P2Q4
{0x36D4, 0x0151, 0x00, 2},	//P_B_P2Q0
{0x36D6, 0xB4CE, 0x00, 2},	//P_B_P2Q1
{0x36D8, 0x012B, 0x00, 2},	//P_B_P2Q2
{0x36DA, 0x6B91, 0x00, 2},	//P_B_P2Q3
{0x36DC, 0x60D0, 0x00, 2},	//P_B_P2Q4
{0x36DE, 0x1731, 0x00, 2},	//P_G2_P2Q0
{0x36E0, 0x980E, 0x00, 2},	//P_G2_P2Q1
{0x36E2, 0x3131, 0x00, 2},	//P_G2_P2Q2
{0x36E4, 0x0F51, 0x00, 2},	//P_G2_P2Q3
{0x36E6, 0xBD12, 0x00, 2},	//P_G2_P2Q4
{0x3700, 0x694C, 0x00, 2},	//P_G1_P3Q0
{0x3702, 0x3CCF, 0x00, 2},	//P_G1_P3Q1
{0x3704, 0x94B2, 0x00, 2},	//P_G1_P3Q2
{0x3706, 0xD6D1, 0x00, 2},	//P_G1_P3Q3
{0x3708, 0x28D4, 0x00, 2},	//P_G1_P3Q4
{0x370A, 0x736E, 0x00, 2},	//P_R_P3Q0
{0x370C, 0x320F, 0x00, 2},	//P_R_P3Q1
{0x370E, 0xC392, 0x00, 2},	//P_R_P3Q2
{0x3710, 0xD471, 0x00, 2},	//P_R_P3Q3
{0x3712, 0x5FB4, 0x00, 2},	//P_R_P3Q4
{0x3714, 0x1CAF, 0x00, 2},	//P_B_P3Q0
{0x3716, 0x7EEF, 0x00, 2},	//P_B_P3Q1
{0x3718, 0x8872, 0x00, 2},	//P_B_P3Q2
{0x371A, 0xE371, 0x00, 2},	//P_B_P3Q3
{0x371C, 0x2F94, 0x00, 2},	//P_B_P3Q4
{0x371E, 0x024E, 0x00, 2},	//P_G2_P3Q0
{0x3720, 0x31EF, 0x00, 2},	//P_G2_P3Q1
{0x3722, 0x8BF2, 0x00, 2},	//P_G2_P3Q2
{0x3724, 0x8FF1, 0x00, 2},	//P_G2_P3Q3
{0x3726, 0x24D4, 0x00, 2},	//P_G2_P3Q4
{0x3740, 0x078F, 0x00, 2},	//P_G1_P4Q0
{0x3742, 0x0812, 0x00, 2},	//P_G1_P4Q1
{0x3744, 0xA0D5, 0x00, 2},	//P_G1_P4Q2
{0x3746, 0xA134, 0x00, 2},	//P_G1_P4Q3
{0x3748, 0x1BF7, 0x00, 2},	//P_G1_P4Q4
{0x374A, 0x1491, 0x00, 2},	//P_R_P4Q0
{0x374C, 0x1892, 0x00, 2},	//P_R_P4Q1
{0x374E, 0xC535, 0x00, 2},	//P_R_P4Q2
{0x3750, 0xCD94, 0x00, 2},	//P_R_P4Q3
{0x3752, 0x31B7, 0x00, 2},	//P_R_P4Q4
{0x3754, 0x3EEF, 0x00, 2},	//P_B_P4Q0
{0x3756, 0x0312, 0x00, 2},	//P_B_P4Q1
{0x3758, 0xD1B4, 0x00, 2},	//P_B_P4Q2
{0x375A, 0xB5D4, 0x00, 2},	//P_B_P4Q3
{0x375C, 0x7056, 0x00, 2},	//P_B_P4Q4
{0x375E, 0x6C2E, 0x00, 2},	//P_G2_P4Q0
{0x3760, 0x0612, 0x00, 2},	//P_G2_P4Q1
{0x3762, 0x9915, 0x00, 2},	//P_G2_P4Q2
{0x3764, 0x9BF4, 0x00, 2},	//P_G2_P4Q3
{0x3766, 0x1537, 0x00, 2},	//P_G2_P4Q4
{0x3784, 0x02BC, 0x00, 2},	//CENTER_COLUMN
{0x3782, 0x01EC, 0x00, 2},	//CENTER_ROW
{0x37C0, 0xAEEA, 0x00, 2},	//P_GR_Q5
{0x37C2, 0xB4A9, 0x00, 2},	//P_RD_Q5
{0x37C4, 0x854B, 0x00, 2},	//P_BL_Q5
{0x37C6, 0xA6CA, 0x00, 2},	//P_GB_Q5
{0x098E, 0x0000, 0x00, 2},	//LOGICAL addressing
{0xC960, 0x0B86, 0x00, 2},	//CAM_PGA_L_CONFIG_COLOUR_TEMP
{0xC962, 0x7C32, 0x00, 2},	//CAM_PGA_L_CONFIG_GREEN_RED_Q14
{0xC964, 0x6F30, 0x00, 2},	//CAM_PGA_L_CONFIG_RED_Q14
{0xC966, 0x7B15, 0x00, 2},	//CAM_PGA_L_CONFIG_GREEN_BLUE_Q14
{0xC968, 0x8019, 0x00, 2},	//CAM_PGA_L_CONFIG_BLUE_Q14
{0xC96A, 0x0F3C, 0x00, 2},	//CAM_PGA_M_CONFIG_COLOUR_TEMP
{0xC96C, 0x7EA2, 0x00, 2},	//CAM_PGA_M_CONFIG_GREEN_RED_Q14
{0xC96E, 0x7F4B, 0x00, 2},	//CAM_PGA_M_CONFIG_RED_Q14
{0xC970, 0x7EB3, 0x00, 2},	//CAM_PGA_M_CONFIG_GREEN_BLUE_Q14
{0xC972, 0x7DEB, 0x00, 2},	//CAM_PGA_M_CONFIG_BLUE_Q14
{0xC974, 0x1996, 0x00, 2},	//CAM_PGA_R_CONFIG_COLOUR_TEMP
{0xC976, 0x7A66, 0x00, 2},	//CAM_PGA_R_CONFIG_GREEN_RED_Q14
{0xC978, 0x6ED0, 0x00, 2},	//CAM_PGA_R_CONFIG_RED_Q14
{0xC97A, 0x7C1D, 0x00, 2},	//CAM_PGA_R_CONFIG_GREEN_BLUE_Q14
{0xC97C, 0x768C, 0x00, 2},	//CAM_PGA_R_CONFIG_BLUE_Q14
{0xC95E, 0x0003, 0x00, 2},	//CAM_PGA_PGA_CONTROL

//[Step5-AWB_CCM]
//[Color Correction Matrices 06/04/11 15:35:24]
{0x098E, 0x0000, 0x00, 2},
{0xC892, 0x01C3, 0x00, 2},
{0xC894, 0xFF17, 0x00, 2},
{0xC896, 0x0026, 0x00, 2},
{0xC898, 0xFFB6, 0x00, 2},
{0xC89A, 0x0128, 0x00, 2},
{0xC89C, 0x0022, 0x00, 2},
{0xC89E, 0xFF97, 0x00, 2},
{0xC8A0, 0xFF15, 0x00, 2},
{0xC8A2, 0x0256, 0x00, 2},
{0xC8A4, 0x01DA, 0x00, 2},
{0xC8A6, 0xFF07, 0x00, 2},
{0xC8A8, 0x001F, 0x00, 2},
{0xC8AA, 0xFFC3, 0x00, 2},
{0xC8AC, 0x0156, 0x00, 2},
{0xC8AE, 0xFFE8, 0x00, 2},
{0xC8B0, 0xFFCD, 0x00, 2},
{0xC8B2, 0xFF3A, 0x00, 2},
{0xC8B4, 0x01FA, 0x00, 2},
{0xC8B6, 0x01D3, 0x00, 2},
{0xC8B8, 0xFF73, 0x00, 2},
{0xC8BA, 0xFFB9, 0x00, 2},
{0xC8BC, 0xFFA4, 0x00, 2},
{0xC8BE, 0x0170, 0x00, 2},
{0xC8C0, 0xFFEB, 0x00, 2},
{0xC8C2, 0xFFEF, 0x00, 2},
{0xC8C4, 0xFF33, 0x00, 2},
{0xC8C6, 0x01DE, 0x00, 2},
{0xC8C8, 0x0067, 0x00, 2},
{0xC8CA, 0x0117, 0x00, 2},
{0xC8CC, 0x0093, 0x00, 2},
{0xC8CE, 0x00FE, 0x00, 2},
{0xC8D0, 0x00A6, 0x00, 2},
{0xC8D2, 0x008C, 0x00, 2},
{0xC8D4, 0x09C4, 0x00, 2},
{0xC8D6, 0x0D67, 0x00, 2},
{0xC8D8, 0x1964, 0x00, 2},
{0xC8F2, 0x03  , 0x00, 1},
{0xC8F3, 0x02  , 0x00, 1},
{0xC8F4, 0x7E60, 0x00, 2},
{0xC8F6, 0xAC56, 0x00, 2},
{0xC8F8, 0x4EC9, 0x00, 2},
{0xC8FA, 0xF378, 0x00, 2},
{0xC8FC, 0xC7D8, 0x00, 2},
{0xC8FE, 0x92D8, 0x00, 2},
{0xC900, 0x25D9, 0x00, 2},
{0xC902, 0xB292, 0x00, 2},
{0xC904, 0x003C, 0x00, 2},
{0xC906, 0x0037, 0x00, 2},



{0xC90C, 0x83, 0x00, 1},
{0xC90D, 0x80, 0x00, 1},
{0xC90E, 0x81, 0x00, 1},
{0xC90F, 0x80, 0x00, 1},
{0xC910, 0x80, 0x00, 1},
{0xC911, 0x7b, 0x00, 1},


{0xAC06, 0x64, 0x00, 1},
{0xAC08, 0x64, 0x00, 1},

{0x098E, 0x2C12, 0x00, 2},
{0xAC12, 0x00B4, 0x00, 2},//AWB_R_GAIN
{0xAC14, 0x009E, 0x00, 2},//AWB_B_GAIN

//[Step7]
{0x098E, 0x4926, 0x00, 2},
{0xC926, 0x0020, 0x00, 2},
{0xC928, 0x009A, 0x00, 2},
{0xC946, 0x0070, 0x00, 2},
{0xC948, 0x00F3, 0x00, 2},
{0xC952, 0x0020, 0x00, 2},
{0xC954, 0x009A, 0x00, 2},
{0xC92A, 0x99, 0x00, 1},
{0xC92B, 0x70, 0x00, 1},
{0xC92C, 0x00, 0x00, 1},
{0xC92D, 0xA0, 0x00, 1},
{0xC92E, 0x3C, 0x00, 1},
{0xC92F, 0x01, 0x00, 1},
{0xC930, 0x06, 0x00, 1},
{0xC931, 0x64, 0x00, 1},
{0xC932, 0x00, 0x00, 1},
{0xC933, 0x0C, 0x00, 1},
{0xC934, 0x3C, 0x00, 1},
{0xC935, 0x3C, 0x00, 1},
{0xC936, 0x3C, 0x00, 1},
{0xC937, 0x0F, 0x00, 1},
{0xC938, 0x64, 0x00, 1},
{0xC939, 0x64, 0x00, 1},
{0xC93A, 0x64, 0x00, 1},
{0xC93B, 0x32, 0x00, 1},
{0xC93C, 0x0020, 0x00, 2},
{0xC93E, 0x009A, 0x00, 2},
{0xC940, 0x00ff, 0x00, 2},
{0xC942, 0x3c, 0x00, 1},
{0xC943, 0x30, 0x00, 1},
{0xC944, 0x4c, 0x00, 1},
{0xC945, 0x19, 0x00, 1},
{0xC94A, 0x0230, 0x00, 2},
{0xC94C, 0x0010, 0x00, 2},
{0xC94E, 0x01CD, 0x00, 2},
{0xC950, 0x05, 0x00, 1},
{0xC951, 0x40, 0x00, 1},
{0xC87B, 0x1B, 0x00, 1},
{0xC878, 0x0c, 0x00, 1},
{0xC890, 0x0040, 0x00, 2},
{0xC886, 0x0100, 0x00, 2},
{0xC87C, 0x005A, 0x00, 2},
{0xB42A, 0x05, 0x00, 1},
{0xA80A, 0x20, 0x00, 1},

{0xBC02, 0x0007, 0x00, 2},

//
//[Step8-Features]
{0xC984, 0x8041, 0x00, 2},       // CAM_PORT_OUTPUT_CONTROL
{0xC988, 0x0F00, 0x00, 2},       // CAM_PORT_MIPI_TIMING_T_HS_ZERO
{0xC98A, 0x0B07, 0x00, 2},       // CAM_PORT_MIPI_TIMING_T_HS_EXIT_HS_TRAIL
{0xC98C, 0x0D01, 0x00, 2},       // CAM_PORT_MIPI_TIMING_T_CLK_POST_CLK_PRE
{0xC98E, 0x071D, 0x00, 2},       // CAM_PORT_MIPI_TIMING_T_CLK_TRAIL_CLK_ZERO
{0xC990, 0x0006, 0x00, 2},       // CAM_PORT_MIPI_TIMING_T_LPX
{0xC992, 0x0A0C, 0x00, 2},       // CAM_PORT_MIPI_TIMING_INIT_TIMING
//

//[Anti-Flicker for MT9M114][50Hz]
{0x098E, 0xC88B, 0x00, 2},       // LOGICAL_ADDRESS_ACCESS [CAM_AET_FLICKER_FREQ_HZ]
{0xC88B, 0x32  , 0x00, 1}, 	// CAM_AET_FLICKER_FREQ_HZ

{0xA804, 0x00BF, 0x00, 2},
//AWB Start point
{0x098E, 0x48F0, 0x00, 2},
//{0xC8F0, {2}, {0x0d8e}},
{0xC8F0, 0x11ea, 0x00, 2},

//For gamma
{0xC87A, 0x49  , 0x00, 1}, 	// CAM_AET_TARGET_AVERAGE_LUMA
{0x098E, 0xB00C, 0x00, 2},       // LOGICAL_ADDRESS_ACCESS [BLACKLEVEL_MAX_BLACK_LEVEL]
{0xB00C, 0x1B  , 0x00, 1}, 	// BLACKLEVEL_MAX_BLACK_LEVEL
{0xB004, 0x0004, 0x00, 2},       // BLACKLEVEL_ALGO

//eliminate white noise
{0x098E, 0x3C02, 0x00, 2},
{0xBC02, 0x000F, 0x00, 2},
{0xC94A, 0x0040, 0x00, 2},
{0xC94C, 0x0005, 0x00, 2},

{0x31E0, 0x0001, 0x00, 2},	// add it in init code

//saturations for sunny
{0x098E, 0xC92A, 0x00, 2},
{0xC92A, 0xE0  , 0x00, 1},
{0xC92B, 0xD0  , 0x00, 1},
{0xC92D, 0x60  , 0x00, 1},

//[ChangeConfig]
{0x098E, 0xDC00, 0x00, 2},       // LOGICAL_ADDRESS_ACCESS [SYSMGR_NEXT_STATE]
{0xDC00, 0x28  , 0x00, 1}, 	// SYSMGR_NEXT_STATE
{0x0080, 0x8002, 0x00, 2},       // COMMAND_REGISTER
//DELAY=200 //{ DELAY, { 100
{0x0000, 200, 0x00, 0},
};


/*RES_3264x2448 full size*/
const struct _sensor_reg_t mt9m114_framesize_full[] = {
	//[Leave Suspend]
	//{ 0x098E, {0xDC00}, 0x00, 2},           // LOGICAL_ADDRESS_ACCESS [SYSMGR_NEXT_STATE]
	//{ 0xDC00, {0x34  }, 0x00, 1},              // SYSMGR_NEXT_STATE
	//{ 0x0080, {0x8002}, 0x00, 2},           // COMMAND_REGISTER
};


#endif /* MT9M114_H_INCLUDED */

/************************** END ***************************/

